	.ident "ncc 5.0.2 (Build 12:10:55 Jul 21 2023)"
	.file "bfs_SELLCSv2.c"
	.data
	.balign 16
	.globl	num_blocks
	.type	num_blocks,@object
	.size	num_blocks,4
num_blocks:
	.int	1
	.globl	chunk_size
	.balign 4
	.type	chunk_size,@object
	.size	chunk_size,4
chunk_size:
	.int	8
	.globl	sigma_window
	.balign 4
	.type	sigma_window,@object
	.size	sigma_window,4
sigma_window:
	.int	16384
	.globl	algorithm_version
	.balign 1
	.type	algorithm_version,@object
	.size	algorithm_version,30
algorithm_version:
	.byte	66
	.byte	70
	.byte	83
	.byte	95
	.byte	68
	.byte	70
	.byte	67
	.byte	95
	.byte	111
	.byte	109
	.byte	112
	.zero	19
	.globl	required_matrix_format
	.balign 4
	.type	required_matrix_format,@object
	.size	required_matrix_format,4
required_matrix_format:
	.int	1
# ============ Begin  sellcs_preprocess ============
	.text
	.balign 16
# line 34
	.globl	sellcs_preprocess
	.type	sellcs_preprocess,@function
sellcs_preprocess:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	lea     %sp,-240(,%fp)
	brge.l.t	%sp,%sl,.L_1.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_1.EoP:
# End of prologue codes
	or	%s2,0,%s2
# line 39

	brne.w	0,%s2,.L0.0
# line 47
	ld	%s3,24(,%s0)	# *(csr_matrix).row_pointers
	adds.l	%s2,%fp,(60)1
	ldl.sx	%s4,32(,%s0)	# *(csr_matrix).nrows
	or	%s24,0,%s1
	or	%s25,0,%s0
	or	%s0,0,%s3
	or	%s1,0,%s4
	lea	%s12,get_rows_size@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_rows_size@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_rows_size
# line 48
	ldl.sx	%s1,32(,%s25)	# *(csr_matrix).nrows
	or	%s23,0,%s0
	ldl.sx	%s2,40(,%s24)	# *(sellcs_matrix).sigma
	lea	%s12,get_order_by_row_size_radix@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_order_by_row_size_radix@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_order_by_row_size_radix
	st	%s0,64(,%s24)	# *(sellcs_matrix).row_order
	or	%s1,0,%s24
	or	%s0,0,%s25
.L0.1:
# line 52
	ld	%s3,64(,%s1)	# *(sellcs_matrix).row_order
	or	%s4,0,(0)1
	or	%s2,0,%s23
	lea	%s12,convert_csr_to_sellcs_dfc@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,convert_csr_to_sellcs_dfc@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# convert_csr_to_sellcs_dfc
	or	%s0,0,%s23
# line 57
	lea	%s12,free@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,free@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# free
# line 58
# Start of epilogue codes
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L0.0:
# line 41
	ld	%s24,24(,%s0)	# *(csr_matrix).row_pointers
	or	%s25,0,%s1
	ld	%s1,16(,%s0)	# *(csr_matrix).column_indices
	or	%s26,0,%s0
	ldl.sx	%s2,32(,%s0)	# *(csr_matrix).nrows
	or	%s0,0,%s24
	lea	%s12,sort_by_1st_colidx@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,sort_by_1st_colidx@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# sort_by_1st_colidx
	st	%s0,64(,%s25)	# *(sellcs_matrix).row_order
# line 42
	ld	%s1,24(,%s26)	# *(csr_matrix).row_pointers
	adds.l	%s3,%fp,(60)1
	ldl.sx	%s2,32(,%s26)	# *(csr_matrix).nrows
	lea	%s12,get_rows_size_sorted@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_rows_size_sorted@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_rows_size_sorted
# line 43
	ld	%s63,64(,%s25)	# *(sellcs_matrix).row_order
	or	%s23,0,%s0
	ldl.sx	%s2,32(,%s26)	# *(csr_matrix).nrows
	or	%s1,0,%s0
	ldl.sx	%s3,40(,%s25)	# *(sellcs_matrix).sigma
	or	%s0,0,%s63
	lea	%s12,get_order_by_row_size_radix_sorted@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_order_by_row_size_radix_sorted@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_order_by_row_size_radix_sorted
	or	%s1,0,%s25
	or	%s0,0,%s26
	br.l	.L0.1
.L_1.EoE:
	.set	.L.1.2auto_size,	0xffffffffffffff10	# 240 Bytes
	.size	sellcs_preprocess,	.-sellcs_preprocess
# ============ End  sellcs_preprocess ============
# ============ Begin  get_task_ptrs ============
	.balign 16
# line 61
	.globl	get_task_ptrs
	.type	get_task_ptrs,@function
get_task_ptrs:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s19,56(,%fp)
	st	%s20,64(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	lea     %sp,-192(,%fp)
	brge.l.t	%sp,%sl,.L_2.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_2.EoP:
# End of prologue codes
# line 62
	ldl.sx	%s62,44(,%s0)	# *(matrix).nslices
# line 64
	adds.w.sx	%s61,%s1,(63)0
# line 62
	ld	%s59,56(,%s0)	# *(matrix).slice_pointers
	muls.l	%s62,4,%s62
	or	%s61,0,%s61
# line 64
	mulu.l	%s61,4,%s61
# line 62
	ldl.sx	%s62,0(%s62,%s59)	# *(*(matrix).slice_pointers)
	or	%s23,0,%s1
# line 64
	lea	%s59,align_size@LO
	and	%s59,%s59,(32)0
	lea.sl	%s59,align_size@HI(,%s59)
# line 63
	adds.w.sx	%s62,%s1,%s62
# line 64
	ld	%s59,0(,%s59)	# align_size
# line 63
	adds.w.sx	%s62,%s62,(0)0
	or	%s24,0,%s0
	divs.w.sx	%s19,%s62,%s1
	or	%s1,0,%s61
	or	%s0,0,%s59
# line 64
	lea	%s12,aligned_alloc@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,aligned_alloc@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# aligned_alloc
# line 70
	or	%s18,0,(0)1
	or	%s60,0,(0)1
# line 68
	or	%s56,1,(0)1
	lea	%s62,0
	stl	%s62,0(,%s0)	# *(task_ptrs)
# line 70
	ldl.sx	%s20,44(,%s24)	# *(matrix).nslices

	brlt.w	0,%s20,.L1.0
	or	%s1,0,%s23
	or	%s62,0,%s0
	or	%s63,0,%s24
.L1.1:
# line 80
	adds.w.sx	%s1,%s1,(63)0

	brlt.w	%s56,%s1,.L1.2
	or	%s0,0,%s62
.L1.3:
# line 83
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L1.2:
# line 80
	subs.w.sx	%s1,0,%s1
	smvl	%s57
	adds.w.sx	%s1,%s56,%s1
	or	%s55,0,%s56
	subs.w.sx	%s1,0,%s1
	muls.l	%s55,4,%s55
	mins.w.sx	%s61,%s1,%s57
	or	%s58,0,%s1
	muls.l	%s59,4,%s61
	adds.l	%s57,%s55,%s62
	or	%s56,0,%s62
	or	%s60,0,%s57
.L1.4:
# line 81
	ldl.sx	%s62,44(,%s63)	# *(matrix).nslices
	or	%s57,0,%s60
# line 80
	adds.l	%s60,%s60,%s59
# line 81
	lvl	%s61
	vbrd	%v63,%s62
	vstl	%v63,4,%s57	# *(task_ptrs)
# line 80
	subs.w.sx	%s58,%s58,%s61

	brge.w	0,%s58,.L1.5
	mins.w.sx	%s61,%s58,%s61
	br.l	.L1.4
.L1.5:
	or	%s0,0,%s56
	br.l	.L1.3
.L1.0:
# line 78
	dld	%s57,56(,%s24)	# *(matrix).slice_pointers
# line 70
	subs.w.sx	%s20,0,%s20
# line 76
	adds.l	%s63,4,%s0
	or	%s62,0,%s57
	or	%s59,0,%s20
	or	%s1,0,%s0
.L1.6:
# line 72

	brge.w	%s18,%s19,.L1.7
.L1.8:
# line 78
	ldl.sx	%s61,4(,%s62)	# *(*(matrix).slice_pointers)
# line 70
	adds.w.sx	%s60,%s60,(63)0
# line 78
	ldl.sx	%s58,0(,%s62)	# *(*(matrix).slice_pointers)
# line 70
	adds.l	%s57,4,%s62
	adds.w.sx	%s59,%s59,(63)0
# line 78
	subs.w.sx	%s58,%s61,%s58
	adds.w.sx	%s18,%s18,%s58
# line 70

	brgt.w	0,%s59,.L1.9
	or	%s62,0,%s1
	or	%s1,0,%s23
	or	%s63,0,%s24
	br.l	.L1.1
.L1.9:
	or	%s62,0,%s57
	br.l	.L1.6
.L1.7:
# line 75
	stl	%s60,0(,%s63)	# *(task_ptrs)
# line 76
	adds.l	%s63,4,%s63
	or	%s18,0,(0)1
	adds.w.sx	%s56,%s56,(63)0
	br.l	.L1.8
.L_2.EoE:
	.set	.L.2.2auto_size,	0xffffffffffffff40	# 192 Bytes
	.size	get_task_ptrs,	.-get_task_ptrs
# ============ End  get_task_ptrs ============
# ============ Begin  get_spmspv_task_ptrs ============
	.balign 16
# line 86
	.globl	get_spmspv_task_ptrs
	.type	get_spmspv_task_ptrs,@function
get_spmspv_task_ptrs:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s19,56(,%fp)
	st	%s20,64(,%fp)
	st	%s21,72(,%fp)
	st	%s23,88(,%fp)
	lea     %sp,-192(,%fp)
	brge.l.t	%sp,%sl,.L_3.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_3.EoP:
# End of prologue codes
# line 88
	or	%s63,0,(0)1

	brlt.w	0,%s2,.L2.0
	or	%s62,0,%s63
	or	%s23,0,%s2
	or	%s21,0,%s0
	or	%s20,0,%s1
.L2.1:
# line 94
	adds.w.sx	%s63,%s3,(63)0
	lea	%s61,align_size@LO
	and	%s61,%s61,(32)0
	lea.sl	%s61,align_size@HI(,%s61)
	or	%s63,0,%s63
	mulu.l	%s1,4,%s63
	ld	%s0,0(,%s61)	# align_size
# line 93
	adds.w.sx	%s62,%s62,%s3
	adds.w.sx	%s62,%s62,(0)0
	divs.w.sx	%s19,%s62,%s3
# line 94
	lea	%s12,aligned_alloc@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,aligned_alloc@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# aligned_alloc
	or	%s63,0,%s0
# line 99
	or	%s18,0,(0)1
	or	%s59,0,(0)1
# line 98
	or	%s55,1,(0)1
	lea	%s62,0
	stl	%s62,0(,%s0)	# *(task_ptrs)
# line 99

	brlt.w	0,%s23,.L2.2
	or	%s2,0,%s23
.L2.3:
	or	%s55,0,%s55
# line 109
	muls.l	%s55,4,%s55
	stl	%s2,0(%s55,%s63)	# *(task_ptrs)
# line 110
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	ld	%s21,72(,%fp)
	ld	%s23,88(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L2.2:
# line 99
	subs.w.sx	%s61,0,%s23
# line 107
	dld	%s60,56(,%s21)	# *(matrix).slice_pointers
	or	%s58,0,%s61
# line 105
	adds.l	%s56,4,%s0
	or	%s1,0,%s63
	or	%s63,0,%s20
	or	%s2,0,%s0
.L2.4:
# line 102
	ldl.sx	%s62,0(,%s63)	# *(slice_nbypass)

	brge.w	%s18,%s19,.L2.5
.L2.6:
# line 107
	adds.w.sx	%s61,%s62,(63)0
	or	%s57,0,%s62
	muls.l	%s61,4,%s61
# line 99
	adds.l	%s63,4,%s63
# line 107
	muls.l	%s57,4,%s57
	ldl.sx	%s61,0(%s61,%s60)	# *(*(matrix).slice_pointers)
# line 99
	adds.w.sx	%s59,%s59,(63)0
# line 107
	ldl.sx	%s57,0(%s57,%s60)	# *(*(matrix).slice_pointers)
# line 99
	adds.w.sx	%s58,%s58,(63)0
# line 107
	subs.w.sx	%s57,%s61,%s57
	adds.w.sx	%s18,%s18,%s57
# line 99

	brgt.w	0,%s58,.L2.4
	or	%s63,0,%s1
	or	%s0,0,%s2
	or	%s2,0,%s23
	br.l	.L2.3
.L2.5:
# line 104
	stl	%s59,0(,%s56)	# *(task_ptrs)
# line 105
	adds.l	%s56,4,%s56
	or	%s18,0,(0)1
	adds.w.sx	%s55,%s55,(63)0
	br.l	.L2.6
.L2.0:
# line 88
	subs.w.sx	%s62,0,%s2
	smvl	%s56
	subs.w.sx	%s62,0,%s62
# line 91
	dld	%s60,56(,%s0)	# *(matrix).slice_pointers
	mins.w.sx	%s61,%s62,%s56
	or	%s58,0,%s62
	or	%s57,0,%s61
	lvl	%s57
	vbrd	%v63,0
	muls.l	%s59,4,%s61
	or	%s63,0,%s1
	or	%s23,0,%s2
	or	%s20,0,%s1
	or	%s21,0,%s0
.L2.7:
	or	%s62,0,%s63
	lvl	%s61
	vldl.sx	%v62,4,%s62	# *(slice_nbypass)
	vsfa	%v61,%v62,2,%s60
	vgtl.sx	%v60,%v61,0,0	# *(*(matrix).slice_pointers)
	adds.l	%s62,4,%s60
	vsfa	%v59,%v62,2,%s62
	vgtl.sx	%v58,%v59,0,0	# *(*(matrix).slice_pointers)
# line 88
	adds.l	%s63,%s63,%s59
	subs.w.sx	%s58,%s58,%s61
# line 91
	vsubs.w.sx	%v57,%v58,%v60
	vadds.w.sx	%v63,%v63,%v57
# line 88

	brge.w	0,%s58,.L2.8
	mins.w.sx	%s61,%s58,%s61
	br.l	.L2.7
.L2.8:
# line 91
	lvl	%s57
	vsum.w.sx	%v56,%v63
	lvs	%s61,%v56(0)
	or	%s62,0,%s61
	br.l	.L2.1
.L_3.EoE:
	.set	.L.3.2auto_size,	0xffffffffffffff40	# 192 Bytes
	.size	get_spmspv_task_ptrs,	.-get_spmspv_task_ptrs
# ============ End  get_spmspv_task_ptrs ============
# ============ Begin  get_start_index ============
	.balign 16
# line 114
	.globl	get_start_index
	.type	get_start_index,@function
get_start_index:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s19,56(,%fp)
	st	%s20,64(,%fp)
# End of prologue codes
# line 115

	brlt.w	0,%s1,.L3.0
.L3.1:
# line 122
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	or	%sp,0,%fp
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L3.0:
# line 115
	subs.w.sx	%s1,0,%s1
	smvl	%s62
	subs.w.sx	%s1,0,%s1
# line 117
	or	%s20,0,(0)1
# line 115
	mins.w.sx	%s18,%s1,%s62
	or	%s60,0,%s1
	or	%s61,0,(0)1
	or	%s63,0,%s0
.L3.2:
	or	%s62,0,%s63
# line 117
	lvl	%s18
	vldl.sx	%v63,4,%s62	# *(row_order)
	vfmk.w.eq	%vm15,%v63
	lzvm	%s19,%vm15

	breq.w	%s19,%s18,.L3.3
	or	%s20,1,(0)1
	or	%s18,0,%s19
.L3.3:
	or	%s62,0,%s18
# line 115
	muls.l	%s62,4,%s62
	adds.w.sx	%s61,%s61,%s18
	adds.l	%s63,%s63,%s62

	breq.w	0,%s20,.L3.4
.L3.5:

	brne.w	0,%s20,.L3.6
	br.l	.L3.1
.L3.6:
	or	%s0,0,%s61
# line 119
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	or	%sp,0,%fp
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L3.4:
# line 115
	subs.w.sx	%s60,%s60,%s18

	brge.w	0,%s60,.L3.7
	mins.w.sx	%s18,%s60,%s18
	br.l	.L3.2
.L3.7:
	br.l	.L3.5
.L_4.EoE:
	.set	.L.4.2auto_size,	0x0	# 0 Bytes
	.size	get_start_index,	.-get_start_index
# ============ End  get_start_index ============
# ============ Begin  run_custom_bfs_test ============
	.section .rodata
	.balign 16
	.type	.LP.__string.0,@object
.LP.__string.0:
	.byte	75
	.byte	101
	.byte	114
	.byte	110
	.byte	101
	.byte	108
	.byte	32
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	44
	.byte	32
	.byte	77
	.byte	101
	.byte	114
	.byte	103
	.byte	101
	.byte	32
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	44
	.byte	32
	.byte	80
	.byte	114
	.byte	101
	.byte	112
	.byte	114
	.byte	111
	.byte	99
	.byte	101
	.byte	115
	.byte	115
	.byte	105
	.byte	110
	.byte	103
	.byte	32
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	44
	.byte	32
	.byte	83
	.byte	99
	.byte	97
	.byte	110
	.byte	32
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	44
	.byte	32
	.byte	77
	.byte	101
	.byte	109
	.byte	115
	.byte	101
	.byte	116
	.byte	32
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	10
	.zero	1
	.balign 8
	.type	.LP.__string.1,@object
.LP.__string.1:
	.byte	105
	.byte	116
	.byte	101
	.byte	114
	.byte	97
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	108
	.byte	117
	.byte	44
	.byte	32
	.byte	98
	.byte	102
	.byte	115
	.byte	32
	.byte	114
	.byte	117
	.byte	110
	.byte	116
	.byte	105
	.byte	109
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	46
	.byte	51
	.byte	102
	.byte	32
	.byte	109
	.byte	115
	.byte	10
	.zero	1
	.text
	.balign 16
# line 137
	.globl	run_custom_bfs_test
	.type	run_custom_bfs_test,@function
run_custom_bfs_test:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s19,56(,%fp)
	st	%s20,64(,%fp)
	st	%s21,72(,%fp)
	st	%s22,80(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	st	%s33,168(,%fp)
	lea     %sp,-1601792(,%fp)
	brge.l.t	%sp,%sl,.L_5.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_5.EoP:
# End of prologue codes
	st	%s0,176(,%fp)	# csr_matrix
	st	%s1,184(,%fp)	# bfs_x
	st	%s2,192(,%fp)	# colidx_x
	st	%s3,200(,%fp)	# nnzx
	st	%s4,208(,%fp)	# frontier
	st	%s5,216(,%fp)	# num_vex
	st	%s6,224(,%fp)	# conv_time
	st	%s7,232(,%fp)	# iter_times
# line 143
	ldl.sx	%s55,32(,%s0)	# *(csr_matrix).nrows
	lea	%s31,align_size@LO
	and	%s31,%s31,(32)0
	lea.sl	%s31,align_size@HI(,%s31)
	or	%s55,0,%s55
	mulu.l	%s1,4,%s55
	or	%s23,0,%s31
	ld	%s0,0(,%s23)	# align_size
	lea	%s32,aligned_alloc@LO
	and	%s32,%s32,(32)0
	lea.sl	%s32,aligned_alloc@HI(,%s32)
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600288(,%fp)	# mask_x
# line 144
	ld	%s53,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s53)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 145
	ld	%s61,-1600288(,%fp)	# mask_x
	or	%s55,1,(0)1
	stl	%s55,0(,%s61)	# *(mask_x)
# line 146
	ld	%s61,176(,%fp)	# csr_matrix
	ld	%s0,0(,%s23)	# align_size
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s53,0,%s61
	mulu.l	%s1,4,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600280(,%fp)	# mask_y
# line 147
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 150
	ld	%s61,176(,%fp)	# csr_matrix
	ld	%s0,0(,%s23)	# align_size
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s53,0,%s61
	mulu.l	%s1,8,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600272(,%fp)	# bfs_y
# line 151
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,8,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 152
	ld	%s61,176(,%fp)	# csr_matrix
	ld	%s0,0(,%s23)	# align_size
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s53,0,%s61
	mulu.l	%s1,4,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600264(,%fp)	# colidx_y
# line 153
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 157
	ld	%s61,176(,%fp)	# csr_matrix
	ld	%s0,0(,%s23)	# align_size
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	adds.w.sx	%s55,%s61,(63)0
	or	%s53,0,%s55
	mulu.l	%s1,4,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600256(,%fp)	# bucket
# line 158
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	adds.w.sx	%s55,%s61,(63)0
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 161
	lea	%s61,256
# line 164
	or	%s1,0,(0)1
# line 161
	stl	%s61,-1600212(,%fp)	# sellcs_matrix.C
# line 162
	lea	%s61,sigma_window@LO
	and	%s61,%s61,(32)0
	lea.sl	%s61,sigma_window@HI(,%s61)
	ldl.sx	%s61,0(,%s61)	# sigma_window
# line 164
	lea	%s54,-1600120
	adds.l	%s0,%fp,%s54
# line 162
	stl	%s61,-1600208(,%fp)	# sellcs_matrix.sigma
# line 164
	lea	%s24,gettimeofday@LO
	and	%s24,%s24,(32)0
	lea.sl	%s24,gettimeofday@HI(,%s24)
	or	%s12,0,%s24
	bsic	%lr,(,%s12)	# gettimeofday
# line 165
	ld	%s0,176(,%fp)	# csr_matrix
	lea	%s54,-1600248
	adds.l	%s1,%fp,%s54
	ld1b.zx	%s2,264(,%fp)	# sort_flag
	lea	%s12,sellcs_preprocess@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,sellcs_preprocess@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# sellcs_preprocess
# line 166
	lea	%s54,-1600136
	adds.l	%s0,%fp,%s54
	or	%s1,0,(0)1
	or	%s12,0,%s24
	bsic	%lr,(,%s12)	# gettimeofday
# line 167
	ld	%s59,-1600136(,%fp)	# t2.tv_sec
	ld	%s25,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s26,1083129856
	subs.l	%s63,%s59,%s25
	ld	%s25,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s63,%s63
	ld	%s27,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s63,%s26,%s63
	subs.l	%s27,%s25,%s27
	ld	%s61,224(,%fp)	# conv_time
	cvt.d.l	%s27,%s27
	lea	%s25,-755914244
	lea.sl	%s25,1062232654(,%s25)
	fmul.d	%s27,%s25,%s27
	fadd.d	%s27,%s63,%s27
	st	%s27,0(,%s61)	# *(conv_time)
# line 169
	ldl.sx	%s61,-1600204(,%fp)	# sellcs_matrix.nslices
	ld	%s0,0(,%s23)	# align_size
	or	%s53,0,%s61
	mulu.l	%s1,4,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600104(,%fp)	# slice_idx_max
# line 170
	ldl.sx	%s61,-1600204(,%fp)	# sellcs_matrix.nslices
	or	%s1,0,(0)1
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 171
	ldl.sx	%s61,-1600204(,%fp)	# sellcs_matrix.nslices
	ld	%s0,0(,%s23)	# align_size
	or	%s53,0,%s61
	mulu.l	%s1,4,%s53
	or	%s12,0,%s32
	bsic	%lr,(,%s12)	# aligned_alloc
	st	%s0,-1600096(,%fp)	# slice_idx_min
# line 172
	ldl.sx	%s55,-1600204(,%fp)	# sellcs_matrix.nslices
	ldl.sx	%s1,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 174
	or	%s59,0,(0)1
	ldl.sx	%s61,-1600204(,%fp)	# sellcs_matrix.nslices

	brlt.w	0,%s61,.L4.0
	st	%s24,-1600528(,%fp)	# spill
.L4.1:
# line 182
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s24,0,%s31
	lea	%s58,64
	divs.w.sx	%s55,%s61,%s58
# line 183
	ld	%s0,0(,%s24)	# align_size
# line 182
	adds.w.sx	%s61,%s55,(63)0
	or	%s53,0,%s61
# line 183
	mulu.l	%s24,8,%s53
	or	%s1,0,%s24
	or	%s12,0,%s32
	bsic	%lr,(,%s12)
# line 184
	or	%s1,0,(0)1
# line 183
	st	%s0,-1600088(,%fp)	# mask
	or	%s2,0,%s24
# line 184
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 185
	ld	%s0,-1600184(,%fp)	# sellcs_matrix.row_order
	ldl.sx	%s1,-1600224(,%fp)	# sellcs_matrix.nrows
	lea	%s12,get_start_index@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_start_index@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_start_index
# line 186
	lea	%s18,64
	divs.w.sx	%s58,%s0,%s18
# line 188
	ld	%s61,-1600088(,%fp)	# mask
# line 198
	or	%s18,0,(0)1
	lea	%s54,0
	or	%s19,0,(0)1
# line 202
	lea	%s33,malloc@LO
	and	%s33,%s33,(32)0
	lea.sl	%s33,malloc@HI(,%s33)
# line 198
	or	%s20,0,(0)1
	or	%s21,0,(0)1
	or	%s22,0,(0)1
# line 188
	sla.w.sx	%s55,%s58,6
	muls.l	%s58,8,%s58
	subs.w.sx	%s55,%s0,%s55
	subs.w.sx	%s55,63,%s55
	sll	%s55,(63)0,%s55
	st	%s55,0(%s58,%s61)	# *(mask)
# line 190
	stl	%s54,-800012(,%fp)	# x_max
# line 191
	ldl.sx	%s53,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s24,0,%s53
# line 202
	mulu.l	%s0,4,%s24
# line 191
	stl	%s53,-800016(,%fp)	# x_min
# line 202
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 203
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s24,0,%s0
	st	%s24,-1600472(,%fp)	# spill
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 204
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 205
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s24,0,%s0
	st	%s24,-1600488(,%fp)	# spill
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 207
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 208
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 209
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 210
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 212
	ldl.sx	%s54,-1600204(,%fp)	# sellcs_matrix.nslices
# line 213
	or	%s61,8,(0)1
# line 212
	ld	%s24,-1600168(,%fp)	# sellcs_matrix.vop_pointers
	muls.l	%s53,4,%s54
# line 213
	lea	%s25,chunk_size@LO
	and	%s25,%s25,(32)0
	lea.sl	%s25,chunk_size@HI(,%s25)
	or	%s26,0,%s25
	st	%s25,-1600776(,%fp)	# spill
# line 212
	ldl.sx	%s24,0(%s53,%s24)	# *(sellcs_matrix.vop_pointers)
# line 214
	or	%s1,8,(0)1
# line 213
	stl	%s61,0(,%s26)	# chunk_size
	st	%s24,-1600784(,%fp)	# spill
# line 214
	lea	%s53,-1600248
	adds.l	%s0,%fp,%s53
	st	%s0,-1600792(,%fp)	# spill
	lea	%s12,get_task_ptrs@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,get_task_ptrs@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# get_task_ptrs
# line 215
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s3,0,%s0
	st	%s3,-1600520(,%fp)	# spill
	adds.w.sx	%s55,%s61,(63)0
	or	%s55,0,%s55
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 216
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	or	%s24,0,%s0
	st	%s24,-1600504(,%fp)	# spill
	adds.w.sx	%s55,%s61,(63)0
	or	%s25,0,%s0
	st	%s25,-1600712(,%fp)	# spill
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 218
	lea	%s12,omp_get_max_threads@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,omp_get_max_threads@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# omp_get_max_threads
# line 220
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	lea	%s58,256
	divs.w.sx	%s55,%s61,%s58
	adds.w.sx	%s61,%s55,(63)0
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)	# malloc
# line 221
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	lea	%s58,256
	divs.w.sx	%s55,%s61,%s58
	or	%s24,0,%s0
	adds.w.sx	%s61,%s55,(63)0
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 222
	or	%s61,1,(0)1
# line 227
	lea	%s54,-800008
	adds.l	%s2,%fp,%s54
# line 222
	stl	%s61,0(,%s24)	# *(compressed_x)
# line 227
	lea	%s53,184
	adds.l	%s5,%fp,%s53
	lea	%s53,-1600272
	adds.l	%s6,%fp,%s53
	lea	%s0,run_custom_bfs_test$1@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$1@HI(,%s0)
# line 225
	or	%s23,-50,(0)1
	ld	%s4,-1600792(,%fp)	# restore
	ld	%s3,-1600520(,%fp)	# restore
.L4.2:
# line 227
	or	%s55,4,(0)1
	or	%s1,4,(0)1
	stl	%s55,-800008(,%fp)	# j$37
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	st	%s2,192(,%sp)
	st	%s3,200(,%sp)
	st	%s4,208(,%sp)
	st	%s5,216(,%sp)
	st	%s6,224(,%sp)
	lea	%s24,__vthr$_pcall_va@LO
	and	%s24,%s24,(32)0
	lea.sl	%s24,__vthr$_pcall_va@HI(,%s24)
	or	%s25,0,%s0
	or	%s26,0,%s2
	or	%s27,0,%s3
	or	%s28,0,%s4
	or	%s29,0,%s5
	or	%s30,0,%s6
	or	%s12,0,%s24
	bsic	%lr,(,%s12)	# __vthr$_pcall_va
# line 225
	adds.l	%s23,%s23,(63)0

	brgt.l	0,%s23,.L4.3
# line 235
	ld	%s54,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ld	%s0,-1600272(,%fp)	# bfs_y
	ldl.sx	%s61,32(,%s54)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,8,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 236
	ld	%s61,176(,%fp)	# csr_matrix
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)
	st	%s0,-1600080(,%fp)	# merge_row_order
# line 237
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,0,(0)1
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
	ld	%s23,-1600784(,%fp)	# restore
# line 239
	adds.w.sx	%s23,%s23,(63)0
	or	%s55,0,%s23
	mulu.l	%s0,4,%s55
	or	%s12,0,%s33
	bsic	%lr,(,%s12)
	st	%s0,-1600072(,%fp)	# vop_length_ptr
# line 240
	ld	%s1,-1600176(,%fp)	# sellcs_matrix.vop_lengths
	ld	%s55,-1600784(,%fp)	# restore
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memcpy@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memcpy@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memcpy
# line 241
	ld	%s0,-1600072(,%fp)	# vop_length_ptr
	or	%s1,0,%s23
	lea	%s23,exclusive_scan@LO
	and	%s23,%s23,(32)0
	lea.sl	%s23,exclusive_scan@HI(,%s23)
	or	%s12,0,%s23
	bsic	%lr,(,%s12)	# exclusive_scan
# line 243
	ld	%s61,176(,%fp)	# csr_matrix
	ldl.sx	%s61,32(,%s61)	# *(csr_matrix).nrows

	brlt.w	0,%s61,.L4.4
	st	%s23,-1600456(,%fp)	# spill
	st	%s24,-1600432(,%fp)	# spill
	st	%s22,-1600600(,%fp)	# spill
	st	%s21,-1600576(,%fp)	# spill
	st	%s20,-1600552(,%fp)	# spill
	st	%s19,-1600584(,%fp)	# spill
	st	%s18,-1600640(,%fp)	# spill
	ld	%s26,-1600776(,%fp)	# restore
	or	%s34,0,%s33
	or	%s35,0,%s31
	or	%s36,0,%s32
	ld	%s25,-1600712(,%fp)	# restore
	or	%s29,0,%s27
.L4.5:
	or	%s26,0,%s26
# line 249
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s38,0,%s34
	st	%s38,-1600800(,%fp)	# spill
	adds.w.sx	%s55,%s61,(63)0
	or	%s37,0,%s35
	st	%s37,-1600808(,%fp)	# spill
	or	%s55,0,%s55
	mulu.l	%s0,4,%s55
	or	%s35,0,%s36
	st	%s35,-1600816(,%fp)	# spill
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 250
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s34,0,%s0
	st	%s34,-1600464(,%fp)	# spill
	adds.w.sx	%s55,%s61,(63)0
	ld	%s34,-1600800(,%fp)	# restore
	or	%s55,0,%s55
	mulu.l	%s53,4,%s55
	or	%s35,0,%s0
	st	%s35,-1600416(,%fp)	# spill
	or	%s0,0,%s53
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 251
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	or	%s34,0,%s0
	st	%s34,-1600480(,%fp)	# spill
	adds.w.sx	%s55,%s61,(63)0
	or	%s34,0,%s0
	st	%s34,-1600424(,%fp)	# spill
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	ld	%s0,-1600416(,%fp)	# restore
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 252
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	or	%s0,0,%s34
	adds.w.sx	%s55,%s61,(63)0
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 254
	ld	%s61,176(,%fp)	# csr_matrix
	or	%s1,47,(0)1
	ld	%s0,0(,%s61)	# *(csr_matrix).name
	lea	%s12,strrchr@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,strrchr@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# strrchr
# line 257
	adds.l	%s34,%s0,(63)0
	st	%s34,-1600824(,%fp)	# spill
	or	%s0,0,%s34
	lea	%s12,strlen@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,strlen@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# strlen
	adds.w.sx	%s61,0,%s0
# line 259
	adds.w.sx	%s55,%s61,(63)0
	or	%s0,0,%s55
	lea	%s12,__grow_stack@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__grow_stack@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __grow_stack
	lea	%s54,408
	adds.l	%s0,%sp,%s54
	ld	%s1,-1600824(,%fp)	# restore
# line 261
	lea	%s12,strcpy@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,strcpy@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# strcpy
# line 263
	ldl.sx	%s61,0(,%s26)	# chunk_size
	ldl.sx	%s55,-1600224(,%fp)	# sellcs_matrix.nrows
	ld	%s34,-1600800(,%fp)	# restore
	muls.w.sx	%s61,%s61,%s55
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	st	%s0,-1600064(,%fp)	# col_y_tmp
# line 264
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	ldl.sx	%s55,-1600224(,%fp)	# sellcs_matrix.nrows
	muls.w.sx	%s61,%s61,%s55
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 265
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	ld	%s34,-1600808(,%fp)	# restore
	or	%s53,0,%s61
	mulu.l	%s1,8,%s53
	ld	%s0,0(,%s34)	# align_size
	ld	%s34,-1600816(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 266
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s34,0,%s0
	or	%s55,0,%s61
	mulu.l	%s2,8,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 268
	or	%s53,1,(0)1
	ld	%s35,-1600800(,%fp)	# restore
	st	%s53,0(,%s34)	# *(mask_tmp)
# line 270
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s55,0,%s61
	mulu.l	%s0,4,%s55
	or	%s12,0,%s35
	bsic	%lr,(,%s12)
# line 271
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	or	%s1,0,(0)1
	or	%s34,0,%s0
	st	%s34,-1600736(,%fp)	# spill
	or	%s55,0,%s61
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 276
	ld	%s0,176(,%fp)	# csr_matrix
	lea	%s54,-1600056
	adds.l	%s34,%fp,%s54
	st	%s34,-1600368(,%fp)	# spill
	or	%s1,0,%s34
	lea	%s12,convert_csr_to_csc@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,convert_csr_to_csc@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# convert_csr_to_csc
# line 278
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
# line 281
	or	%s1,0,(0)1
# line 278
	lea	%s54,1202590843
	cvt.d.w	%s53,%s61
	lea.sl	%s34,1067743969(,%s54)
	fmul.d	%s53,%s34,%s53
# line 281
	lea	%s63,-1600008
	adds.l	%s0,%fp,%s63
# line 278
	cvt.w.d.sx.rz	%s55,%s53
	ld	%s34,-1600528(,%fp)	# restore
	stl	%s55,-800000(,%fp)	# SWITCH_TO_SPMSPV
# line 279
	stl	%s55,-800004(,%fp)	# SWITCH_TO_SPMV
# line 281
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 285
	lea	%s63,perf_analysis@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,perf_analysis@HI(,%s63)
	or	%s62,0,%s63
	st	%s63,-1600832(,%fp)	# spill
# line 287
	lea	%s54,-1600120
	adds.l	%s0,%fp,%s54
# line 298
	lea	%s53,-799988
	adds.l	%s2,%fp,%s53
	st	%s0,-1600536(,%fp)	# spill
	st	%s2,-1600568(,%fp)	# spill
# line 307
	lea	%s53,-1600136
	adds.l	%s0,%fp,%s53
# line 318
	lea	%s53,-399996
	adds.l	%s28,%fp,%s53
	st	%s0,-1600544(,%fp)	# spill
	lea	%s34,-1600248
	adds.l	%s30,%fp,%s34
	lea	%s34,256
	adds.l	%s31,%fp,%s34
	lea	%s59,200
	adds.l	%s32,%fp,%s59
	lea	%s59,-800004
	adds.l	%s33,%fp,%s59
	lea	%s63,-1599992
	adds.l	%s22,%fp,%s63
	lea	%s63,-1600288
	adds.l	%s21,%fp,%s63
	lea	%s63,-1600280
	adds.l	%s20,%fp,%s63
	lea	%s63,-1600088
	adds.l	%s19,%fp,%s63
	lea	%s63,-800000
	adds.l	%s24,%fp,%s63
	lea	%s63,-1600104
	adds.l	%s61,%fp,%s63
	lea	%s63,-1600096
	adds.l	%s63,%fp,%s63
	st	%s61,-1600312(,%fp)	# spill
	st	%s63,-1600320(,%fp)	# spill
	lea	%s63,-1600256
	adds.l	%s61,%fp,%s63
	lea	%s63,192
	adds.l	%s63,%fp,%s63
	st	%s61,-1600328(,%fp)	# spill
	st	%s63,-1600336(,%fp)	# spill
	lea	%s63,-800012
	adds.l	%s61,%fp,%s63
	lea	%s63,-800016
	adds.l	%s63,%fp,%s63
	st	%s61,-1600344(,%fp)	# spill
	st	%s63,-1600352(,%fp)	# spill
	lea	%s63,-1600264
	adds.l	%s61,%fp,%s63
	lea	%s63,-1600072
	adds.l	%s63,%fp,%s63
	st	%s61,-1600360(,%fp)	# spill
	st	%s63,-1600376(,%fp)	# spill
	lea	%s63,-1600272
	adds.l	%s61,%fp,%s63
	lea	%s63,-1600064
	adds.l	%s63,%fp,%s63
	st	%s61,-1600384(,%fp)	# spill
	st	%s63,-1600392(,%fp)	# spill
	lea	%s63,-1600080
	adds.l	%s61,%fp,%s63
	lea	%s63,184
	adds.l	%s63,%fp,%s63
	st	%s61,-1600400(,%fp)	# spill
	st	%s63,-1600408(,%fp)	# spill
# line 461
	lea	%s63,-400000
	adds.l	%s2,%fp,%s63
# line 473
	lea	%s63,-400004
	adds.l	%s63,%fp,%s63
	st	%s2,-1600680(,%fp)	# spill
	st	%s63,-1600664(,%fp)	# spill
# line 491
	lea	%s63,-400008
	adds.l	%s2,%fp,%s63
# line 538
	lea	%s63,-799992
	adds.l	%s63,%fp,%s63
	st	%s2,-1600768(,%fp)	# spill
	st	%s63,-1600728(,%fp)	# spill
# line 730
	lea	%s63,-12
	adds.l	%s3,%fp,%s63
	lea	%s63,-799996
	adds.l	%s2,%fp,%s63
	st	%s3,-1600632(,%fp)	# spill
	st	%s2,-1600624(,%fp)	# spill
# line 298
	lea	%s0,run_custom_bfs_test$2@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$2@HI(,%s0)
	or	%s23,0,%s26
	st	%s0,-1600560(,%fp)	# spill
	or	%s34,0,%s26
	st	%s34,-1600448(,%fp)	# spill
	or	%s55,0,%s26
	st	%s55,-1600496(,%fp)	# spill
	or	%s54,0,%s26
	st	%s54,-1600648(,%fp)	# spill
	or	%s57,0,%s26
	st	%s57,-1600720(,%fp)	# spill
	or	%s26,0,%s26
	st	%s26,-1600512(,%fp)	# spill
# line 318
	lea	%s27,run_custom_bfs_test$3@LO
	and	%s27,%s27,(32)0
	lea.sl	%s27,run_custom_bfs_test$3@HI(,%s27)
# line 502
	adds.l	%s2,%fp,(60)1
# line 430
	lea	%s60,verify@LO
	and	%s60,%s60,(32)0
	lea.sl	%s60,verify@HI(,%s60)
	st	%s2,-1600752(,%fp)	# spill
	st	%s60,-1600440(,%fp)	# spill
# line 461
	lea	%s0,run_custom_bfs_test$4@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$4@HI(,%s0)
	st	%s0,-1600672(,%fp)	# spill
# line 473
	lea	%s0,run_custom_bfs_test$5@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$5@HI(,%s0)
	st	%s0,-1600656(,%fp)	# spill
# line 491
	lea	%s0,run_custom_bfs_test$6@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$6@HI(,%s0)
	st	%s0,-1600760(,%fp)	# spill
# line 502
	lea	%s0,run_custom_bfs_test$7@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$7@HI(,%s0)
	st	%s0,-1600744(,%fp)	# spill
# line 730
	lea	%s0,run_custom_bfs_test$8@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,run_custom_bfs_test$8@HI(,%s0)
	st	%s0,-1600616(,%fp)	# spill
.L4.6:
# line 285
	ldl.sx	%s61,0(,%s62)	# perf_analysis

	brne.w	0,%s61,.L4.7
.L4.8:
# line 289
	ld	%s61,200(,%fp)	# nnzx
	ldl.sx	%s55,-800000(,%fp)	# SWITCH_TO_SPMSPV
	ldl.sx	%s18,0(,%s61)	# *(nnzx)

	brle.w	%s18,%s55,.L4.9
.L4.10:
# line 305
	ldl.sx	%s61,0(,%s62)	# perf_analysis

	brne.w	0,%s61,.L4.11
.L4.12:
# line 312
	ldl.sx	%s61,0(,%s23)	# chunk_size
	or	%s1,0,(0)1
	or	%s26,0,%s62
	adds.w.sx	%s55,%s61,(63)0
	or	%s0,0,%s25
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 313
	ldl.sx	%s61,0(,%s26)	# perf_analysis

	brne.w	0,%s61,.L4.13
.L4.14:
# line 318
	or	%s55,26,(0)1
	or	%s1,4,(0)1
	stl	%s55,-399996(,%fp)	# j$83
	st	%s27,176(,%sp)
	st	%s1,184(,%sp)
	st	%s28,192(,%sp)
	st	%s29,200(,%sp)
	st	%s30,208(,%sp)
	st	%s31,216(,%sp)
	st	%s32,224(,%sp)
	st	%s33,232(,%sp)
	st	%s22,240(,%sp)
	st	%s21,248(,%sp)
	st	%s20,256(,%sp)
	st	%s19,264(,%sp)
	st	%s24,272(,%sp)
	ld	%s61,-1600312(,%fp)	# restore
	or	%s0,0,%s27
	or	%s2,0,%s28
	st	%s61,280(,%sp)
	ld	%s61,-1600320(,%fp)	# restore
	or	%s3,0,%s29
	or	%s4,0,%s30
	st	%s61,288(,%sp)
	ld	%s61,-1600328(,%fp)	# restore
	or	%s5,0,%s31
	or	%s6,0,%s32
	st	%s61,296(,%sp)
	ld	%s61,-1600336(,%fp)	# restore
	or	%s7,0,%s33
	st	%s61,304(,%sp)
	ld	%s61,-1600344(,%fp)	# restore
	st	%s61,312(,%sp)
	ld	%s61,-1600352(,%fp)	# restore
	st	%s61,320(,%sp)
	ld	%s61,-1600360(,%fp)	# restore
	st	%s61,328(,%sp)
	ld	%s61,-1600368(,%fp)	# restore
	st	%s61,336(,%sp)
	ld	%s61,-1600376(,%fp)	# restore
	st	%s61,344(,%sp)
	ld	%s61,-1600384(,%fp)	# restore
	st	%s61,352(,%sp)
	ld	%s61,-1600392(,%fp)	# restore
	st	%s61,360(,%sp)
	ld	%s61,-1600400(,%fp)	# restore
	st	%s61,368(,%sp)
	ld	%s61,-1600408(,%fp)	# restore
	st	%s61,376(,%sp)
	st	%s25,384(,%sp)
	ld	%s61,-1600416(,%fp)	# restore
	st	%s61,392(,%sp)
	ld	%s61,-1600424(,%fp)	# restore
	st	%s61,400(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 424
	ldl.sx	%s61,0(,%s26)	# perf_analysis

	brne.w	0,%s61,.L4.15
.L4.16:
	ld	%s60,-1600440(,%fp)	# restore
# line 430
	ldl.sx	%s61,0(,%s60)	# verify

	brne.w	0,%s61,.L4.17
.L4.18:
# line 435
	ldl.sx	%s61,0(,%s26)	# perf_analysis

	brne.w	0,%s61,.L4.19
.L4.20:
	ld	%s34,-1600448(,%fp)	# restore
	or	%s0,0,%s25
# line 440
	ldl.sx	%s61,0(,%s34)	# chunk_size
	adds.w.sx	%s1,%s61,(63)0
	ld	%s34,-1600456(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s34,-1600448(,%fp)	# restore
	ld	%s0,-1600416(,%fp)	# restore
# line 441
	ldl.sx	%s61,0(,%s34)	# chunk_size
	adds.w.sx	%s1,%s61,(63)0
	ld	%s34,-1600456(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s34,-1600448(,%fp)	# restore
	ld	%s0,-1600424(,%fp)	# restore
# line 442
	ldl.sx	%s61,0(,%s34)	# chunk_size
	adds.w.sx	%s1,%s61,(63)0
	ld	%s34,-1600456(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s34,-1600448(,%fp)	# restore
# line 443
	ld	%s61,248(,%fp)	# num_iter
	ldl.sx	%s54,0(,%s34)	# chunk_size
	ldl.sx	%s53,0(,%s61)	# *(num_iter)
	muls.l	%s54,4,%s54
	muls.l	%s53,4,%s53
	ld	%s59,-1600464(,%fp)	# restore
	ld	%s58,-1600472(,%fp)	# restore
	ldl.sx	%s54,0(%s54,%s59)	# *(s_bypass_cnt)
	stl	%s54,0(%s53,%s58)	# *(s_bypass)
# line 444
	ldl.sx	%s34,0(,%s34)	# chunk_size
	ldl.sx	%s59,0(,%s61)	# *(num_iter)
	muls.l	%s34,4,%s34
	muls.l	%s59,4,%s59
	ld	%s58,-1600480(,%fp)	# restore
	ld	%s56,-1600488(,%fp)	# restore
	ldl.sx	%s55,0(%s34,%s58)	# *(w_bypass_cnt)
	stl	%s55,0(%s59,%s56)	# *(w_bypass)
# line 446
	ldl.sx	%s61,0(,%s26)	# perf_analysis

	brne.w	0,%s61,.L4.21
.L4.22:
	ld	%s55,-1600496(,%fp)	# restore
# line 453
	ldl.sx	%s61,0(,%s26)	# perf_analysis
# line 451
	ldl.sx	%s54,0(,%s55)	# chunk_size
	muls.l	%s53,4,%s54
	ld	%s55,-1600504(,%fp)	# restore
	ldl.sx	%s53,0(%s53,%s55)	# *(thread_y_nnz)
# line 453

	brne.w	0,%s61,.L4.23
.L4.24:
# line 457
	ld	%s61,200(,%fp)	# nnzx
	ldl.sx	%s18,-800004(,%fp)	# SWITCH_TO_SPMV
	ldl.sx	%s54,0(,%s61)	# *(nnzx)

	brgt.w	%s54,%s18,.L4.25
# line 487
	ldl.sx	%s61,-800000(,%fp)	# SWITCH_TO_SPMSPV

	brle.w	%s54,%s61,.L4.26
	ld	%s55,-1600504(,%fp)	# restore
# line 514
	ld	%s54,-1600064(,%fp)	# col_y_tmp
# line 515
	ldl.sx	%s3,4(,%s55)	# *(thread_y_nnz)
	lea	%s53,0
# line 519
	stl	%s53,-799992(,%fp)	# next_res_size
# line 521

	brlt.w	0,%s3,.L4.27
.L4.28:
# line 532
	or	%s62,1,(0)1
	ld	%s54,-1600648(,%fp)	# restore
	ldl.sx	%s61,0(,%s54)	# chunk_size

	brlt.w	1,%s61,.L4.29
.L4.30:
	or	%s53,0,%s3
# line 550

	brlt.w	0,%s3,.L4.31
.L4.32:
	st	%s29,-1600520(,%fp)	# spill
# line 560
	ldl.sx	%s61,-800004(,%fp)	# SWITCH_TO_SPMV
	or	%s62,0,%s26
	ld	%s29,-1600416(,%fp)	# restore

	brgt.w	%s3,%s61,.L4.33
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
.L4.34:
# line 569
	ld	%s61,200(,%fp)	# nnzx
	stl	%s53,0(,%s61)	# *(nnzx)
# line 571
	ldl.sx	%s61,0(,%s62)	# perf_analysis

	brne.w	0,%s61,.L4.35
.L4.36:
# line 717
	ldl.sx	%s61,0(,%s62)	# perf_analysis

	brne.w	0,%s61,.L4.37
.L4.38:
# line 721
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	or	%s36,0,%s62
	adds.w.sx	%s55,%s61,(63)0
	or	%s0,0,%s29
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 722
	ldl.sx	%s61,0(,%s26)	# chunk_size
	or	%s1,0,(0)1
	or	%s0,0,%s35
	adds.w.sx	%s55,%s61,(63)0
	or	%s55,0,%s55
	mulu.l	%s2,4,%s55
	lea	%s12,__vec_memset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vec_memset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vec_memset
# line 726
	ld	%s61,200(,%fp)	# nnzx
	ldl.sx	%s55,-800004(,%fp)	# SWITCH_TO_SPMV
	ldl.sx	%s61,0(,%s61)	# *(nnzx)

	brgt.w	%s61,%s55,.L4.39
.L4.40:
# line 738
	ld	%s61,200(,%fp)	# nnzx
	ld	%s54,216(,%fp)	# num_vex
	ldl.sx	%s61,0(,%s61)	# *(nnzx)
	ldl.sx	%s55,0(,%s54)	# *(num_vex)
	adds.w.sx	%s61,%s61,%s55
	stl	%s61,0(,%s54)	# *(num_vex)
# line 740
	ld	%s54,248(,%fp)	# num_iter
	ldl.sx	%s58,0(,%s54)	# *(num_iter)
	adds.w.sx	%s53,%s58,(63)0
	stl	%s53,0(,%s54)	# *(num_iter)
	ldl.sx	%s18,0(,%s36)	# perf_analysis

	brne.w	0,%s18,.L4.41
.L4.42:
# line 283
	ld	%s61,200(,%fp)	# nnzx
	ldl.sx	%s61,0(,%s61)	# *(nnzx)

	brne.w	0,%s61,.L4.43
# line 748
	lea	%s54,-1599984
	adds.l	%s0,%fp,%s54
	or	%s1,0,(0)1
	ld	%s23,-1600528(,%fp)	# restore
	or	%s12,0,%s23
	bsic	%lr,(,%s12)
# line 749
	ld	%s54,-1599984(,%fp)	# t_end.tv_sec
	ld	%s53,-1600008(,%fp)	# t_start.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s62,-1599976(,%fp)	# t_end.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600000(,%fp)	# t_start.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s62,%s34
	ld	%s61,240(,%fp)	# bfs_time
	cvt.d.l	%s34,%s34
	lea	%s59,-755914244
	lea.sl	%s63,1062232654(,%s59)
	fmul.d	%s34,%s63,%s34
	fadd.d	%s34,%s53,%s34
	st	%s34,0(,%s61)	# *(bfs_time)
	ld	%s61,-1600832(,%fp)	# restore
# line 751
	ldl.sx	%s61,0(,%s61)	# perf_analysis

	brne.w	0,%s61,.L4.44
.L4.45:
# line 755
	lea	%s0,.LP.__string.1@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,.LP.__string.1@HI(,%s0)
	st	%s0,176(,%sp)
	ld	%s61,248(,%fp)	# num_iter
	ldl.sx	%s1,0(,%s61)	# *(num_iter)
	st	%s1,184(,%sp)
	ld	%s61,240(,%fp)	# bfs_time
	ld	%s2,0(,%s61)	# *(bfs_time)
	st	%s2,192(,%sp)
	lea	%s12,printf@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,printf@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# printf
# line 822
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	ld	%s21,72(,%fp)
	ld	%s22,80(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	ld	%s33,168(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L4.44:
# line 753
	lea	%s0,.LP.__string.0@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,.LP.__string.0@HI(,%s0)
	st	%s0,176(,%sp)
	ld	%s1,-1600576(,%fp)	# restore
	st	%s1,184(,%sp)
	ld	%s2,-1600600(,%fp)	# restore
	st	%s2,192(,%sp)
	ld	%s3,-1600552(,%fp)	# restore
	st	%s3,200(,%sp)
	ld	%s4,-1600584(,%fp)	# restore
	st	%s4,208(,%sp)
	ld	%s5,-1600640(,%fp)	# restore
	st	%s5,216(,%sp)
	lea	%s12,printf@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,printf@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# printf
	br.l	.L4.45
.L4.43:
	st	%s29,-1600416(,%fp)	# spill
	st	%s26,-1600512(,%fp)	# spill
	or	%s61,0,%s35
	st	%s61,-1600424(,%fp)	# spill
	or	%s62,0,%s36
	ld	%s29,-1600520(,%fp)	# restore
	br.l	.L4.6
.L4.41:
# line 742
	or	%s1,0,(0)1
	or	%s34,0,%s35
	st	%s34,-1600424(,%fp)	# spill
	or	%s34,0,%s36
	st	%s34,-1600608(,%fp)	# spill
	ld	%s0,-1600544(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 743
	ld	%s54,-1600136(,%fp)	# t2.tv_sec
	ld	%s53,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s62,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s62,%s34
	ld	%s35,-1600424(,%fp)	# restore
	cvt.d.l	%s34,%s34
	lea	%s59,-755914244
	lea.sl	%s63,1062232654(,%s59)
	fmul.d	%s34,%s63,%s34
	ld	%s36,-1600608(,%fp)	# restore
	fadd.d	%s34,%s53,%s34
	ld	%s63,-1600640(,%fp)	# restore
	fadd.d	%s63,%s34,%s63
	st	%s63,-1600640(,%fp)	# spill
	br.l	.L4.42
.L4.39:
# line 728
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
# line 730
	or	%s63,3,(0)1
# line 728
	ldl.sx	%s58,0(,%s26)	# chunk_size
# line 730
	or	%s1,4,(0)1
	or	%s34,0,%s36
	st	%s34,-1600608(,%fp)	# spill
# line 728
	adds.w.sx	%s55,%s61,%s58
	or	%s34,0,%s35
	st	%s34,-1600424(,%fp)	# spill
	adds.w.sx	%s61,%s55,(0)0
	or	%s5,0,%s20
	divs.w.sx	%s53,%s61,%s58
	or	%s4,0,%s30
	stl	%s53,-12(,%fp)	# nnz_per_thread
# line 730
	stl	%s63,-799996(,%fp)	# j$199
	ld	%s0,-1600616(,%fp)	# restore
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	ld	%s2,-1600624(,%fp)	# restore
	st	%s2,192(,%sp)
	ld	%s3,-1600632(,%fp)	# restore
	st	%s3,200(,%sp)
	st	%s30,208(,%sp)
	st	%s20,216(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s36,-1600608(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	br.l	.L4.40
.L4.37:
# line 719
	or	%s1,0,(0)1
	or	%s34,0,%s35
	st	%s34,-1600424(,%fp)	# spill
	or	%s34,0,%s62
	st	%s34,-1600608(,%fp)	# spill
	ld	%s0,-1600536(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s62,-1600608(,%fp)	# restore
	br.l	.L4.38
.L4.35:
# line 573
	or	%s1,0,(0)1
	or	%s34,0,%s62
	st	%s34,-1600608(,%fp)	# spill
	or	%s34,0,%s35
	st	%s34,-1600424(,%fp)	# spill
	ld	%s0,-1600544(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 574
	ld	%s54,-1600136(,%fp)	# t2.tv_sec
	ld	%s53,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s61,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s61,%s34
	ld	%s62,-1600608(,%fp)	# restore
	cvt.d.l	%s34,%s34
	lea	%s59,-755914244
	lea.sl	%s63,1062232654(,%s59)
	fmul.d	%s34,%s63,%s34
	ld	%s35,-1600424(,%fp)	# restore
	fadd.d	%s34,%s53,%s34
	ld	%s63,-1600600(,%fp)	# restore
	fadd.d	%s63,%s34,%s63
	st	%s63,-1600600(,%fp)	# spill
	br.l	.L4.36
.L4.33:
# line 562
	ld	%s0,-1600272(,%fp)	# bfs_y
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	ld	%s1,192(,%fp)	# colidx_x
	or	%s34,0,%s62
	st	%s34,-1600608(,%fp)	# spill
	ld	%s54,184(,%fp)	# bfs_x
	or	%s2,0,%s3
	ld	%s4,-1600288(,%fp)	# mask_x
	or	%s3,0,%s54
	ldl.sx	%s5,-1600212(,%fp)	# sellcs_matrix.C
	ld1b.zx	%s6,256(,%fp)	# bit_flag
	ldl.sx	%s7,-1600224(,%fp)	# sellcs_matrix.nrows
	lea	%s12,sparse2dense@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,sparse2dense@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# sparse2dense
	ld	%s53,-1600592(,%fp)	# restore
	ld	%s62,-1600608(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
	br.l	.L4.34
.L4.31:
	st	%s24,-1600688(,%fp)	# spill
	st	%s23,-1600696(,%fp)	# spill
# line 550
	lea	%s61,-99993
	adds.w.sx	%s55,%s61,%s3
	dld	%s61,192(,%fp)	# colidx_x
	or	%s62,0,%s55
	subs.w.sx	%s60,0,%s3
	or	%s63,0,%s61
	or	%s1,0,%s60
	ld	%s59,-1600080(,%fp)	# merge_row_order
	or	%s57,0,%s3
	ld	%s60,-1600088(,%fp)	# mask
	or	%s61,0,%s3
	st	%s61,-1600704(,%fp)	# spill
	dldl.sx	%s58,-1600212(,%fp)	# sellcs_matrix.C
	or	%s61,0,%s53
	st	%s61,-1600592(,%fp)	# spill
	or	%s18,0,%s25
	or	%s25,0,%s60
.L4.46:
	cmps.w.sx	%s61,%s62,(0)1
	lea	%s56,99993
	cmov.w.lt	%s56,%s57,%s61

	brlt.w	0,%s56,.L4.47
	or	%s2,0,%s57
	or	%s3,0,%s62
.L4.48:

	brlt.w	0,%s56,.L4.49
	or	%s61,0,%s1
	or	%s62,0,%s3
	or	%s57,0,%s2
.L4.50:
	lea	%s55,-99993
	adds.w.sx	%s62,%s55,%s62
	lea	%s56,-99993
	adds.w.sx	%s57,%s56,%s57
	lea	%s54,399972
	adds.l	%s63,%s54,%s63
	lea	%s56,99993
	adds.w.sx	%s61,%s56,%s61

	brgt.w	0,%s61,.L4.51
	ld	%s3,-1600704(,%fp)	# restore
	or	%s25,0,%s18
	ld	%s24,-1600688(,%fp)	# restore
	ld	%s53,-1600592(,%fp)	# restore
	ld	%s23,-1600696(,%fp)	# restore
	br.l	.L4.32
.L4.51:
	or	%s1,0,%s61
	br.l	.L4.46
.L4.49:
	subs.w.sx	%s53,0,%s56
	smvl	%s23
	subs.w.sx	%s24,0,%s53
	or	%s6,0,%s63
	muls.l	%s0,16,%s24
	st	%s0,-1600304(,%fp)	# spill
	lea	%s12,__grow_stack@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__grow_stack@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __grow_stack
	lea	%s53,408
	adds.l	%s56,%sp,%s53
	muls.w.sx	%s53,8,%s24
	or	%s47,0,%s56
	mins.w.sx	%s61,%s24,%s23
	adds.l	%s60,%s56,%s53
	muls.l	%s55,4,%s61
	or	%s51,0,%s24
	muls.w.sx	%s54,8,%s61
	or	%s62,0,%fp
	or	%s57,0,(0)1
	muls.w.sx	%s52,8,%s23
	or	%s63,0,%s24
	or	%s4,0,%s59
	or	%s5,0,%s58
	or	%s58,0,%s60
	ld	%s7,-1600304(,%fp)	# restore
	or	%s59,0,%s25
.L4.52:
# line 557
	lea	%s53,-399992
	adds.l	%s53,%s62,%s53
	lea	%s50,64
	adds.l	%s49,%s60,%s57
	lvl	%s61
	vldl.sx	%v36,4,%s53	# j$28
	lea	%s53,-799984
	adds.l	%s53,%s62,%s53
	adds.l	%s48,%s56,%s57
# line 550
	adds.l	%s62,%s62,%s55
	or	%s54,0,%s54
	adds.l	%s57,%s57,%s54
	or	%s54,0,%s52
	subs.w.sx	%s51,%s51,%s61
# line 557
	vdivs.w.sx	%v35,%v36,%s50
	vsla.w.sx	%v34,%v35,6
	vsubs.w.sx	%v33,%v36,%v34
	vsubs.w.sx	%v32,63,%v33
	vbrd	%v31,1
	vsll	%v30,%v31,%v32
	vst	%v30,8,%s49
	vldl.sx	%v29,4,%s53	# j$29
	vor	%v29,(0)1,%v29
	vmuls.l	%v28,8,%v29
	vst	%v28,8,%s48
# line 550

	brge.w	0,%s51,.L4.53
	mins.w.sx	%s61,%s51,%s61
	br.l	.L4.52
.L4.53:
	or	%s56,0,%s63
# line 557
	or	%s61,0,(0)1
	or	%s60,0,%s59
	or	%s57,0,%s58
	or	%s62,0,%s47
.L4.54:
	ld	%s54,0(%s61,%s62)
# line 550
	adds.w.sx	%s56,%s56,(0)0
# line 557
	ld	%s55,0(%s61,%s57)
# line 550
	adds.l	%s61,8,%s61
# line 557
	ld	%s53,0(%s54,%s60)	# *(mask)
	or	%s53,%s55,%s53
	st	%s53,0(%s54,%s60)	# *(mask)
# line 550

	brlt.w	0,%s56,.L4.54
	subs.l	%s0,0,%s7
	lea	%s12,__grow_stack@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__grow_stack@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __grow_stack
	or	%s61,0,%s1
	or	%s62,0,%s3
	or	%s57,0,%s2
	or	%s63,0,%s6
	or	%s59,0,%s4
	or	%s25,0,%s60
	or	%s58,0,%s5
	br.l	.L4.50
.L4.47:
	subs.w.sx	%s61,0,%s56
	smvl	%s55
	subs.w.sx	%s61,0,%s61
	or	%s54,0,(0)1
	mins.w.sx	%s60,%s61,%s55
	or	%s52,0,%s56
	muls.l	%s55,4,%s60
	or	%s56,0,%s61
	or	%s2,0,%s57
	or	%s57,0,%s55
	or	%s3,0,%s62
	or	%s62,0,%s54
.L4.55:
# line 553
	adds.l	%s61,%s63,%s62
	lvl	%s60
	vldl.sx	%v45,4,%s61	# *(colidx_x)
	vsfa	%v44,%v45,2,%s59
	vgtl.sx	%v43,%v44,0,0	# *(merge_row_order)
# line 556
	lea	%s61,64
# line 550
	subs.w.sx	%s56,%s56,%s60
# line 555
	lea	%s54,-399992
	adds.l	%s53,%fp,%s54
# line 556
	lea	%s55,-799984
# line 555
	adds.l	%s53,%s53,%s62
# line 556
	adds.l	%s54,%fp,%s55
	adds.l	%s54,%s54,%s62
# line 550
	adds.l	%s62,%s62,%s57
# line 554
	vdivs.w.sx	%v42,%v43,%s58
# line 555
	vmuls.w.sx	%v41,%s58,%v42
	vsubs.w.sx	%v40,%v43,%v41
	vstl	%v40,4,%s53	# j$28
# line 556
	vdivs.w.sx	%v39,%v40,%s61
	vsla.w.sx	%v38,%v42,2
	vadds.w.sx	%v37,%v38,%v39
	vstl	%v37,4,%s54	# j$29
# line 550

	brge.w	0,%s56,.L4.56
	mins.w.sx	%s60,%s56,%s60
	br.l	.L4.55
.L4.56:
	or	%s56,0,%s52
	br.l	.L4.48
.L4.29:
	st	%s24,-1600688(,%fp)	# spill
	st	%s26,-1600608(,%fp)	# spill
	st	%s23,-1600696(,%fp)	# spill
	st	%s25,-1600712(,%fp)	# spill
# line 532
	adds.l	%s60,4,%s25
	or	%s18,0,%s27
	ld	%s57,-1600720(,%fp)	# restore
	ld	%s24,-1600728(,%fp)	# restore
	ld	%s23,-1600736(,%fp)	# restore
.L4.57:
# line 534
	ldl.sx	%s61,-1600224(,%fp)	# sellcs_matrix.nrows
	ld	%s59,-1600064(,%fp)	# col_y_tmp
	muls.w.sx	%s55,%s62,%s61
# line 535
	ldl.sx	%s61,4(,%s60)	# *(thread_y_nnz)
# line 534
	muls.l	%s54,4,%s55
# line 535
	ldl.sx	%s58,0(,%s60)	# *(thread_y_nnz)
# line 534
	adds.l	%s54,%s59,%s54
# line 535
	subs.w.sx	%s58,%s61,%s58
# line 536

	brlt.w	0,%s58,.L4.58
.L4.59:
# line 532
	adds.l	%s60,4,%s60
	ldl.sx	%s61,0(,%s57)	# chunk_size
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s62,%s61,.L4.57
	st	%s23,-1600736(,%fp)	# spill
	st	%s24,-1600728(,%fp)	# spill
	or	%s63,0,%s57
	st	%s63,-1600720(,%fp)	# spill
	ld	%s25,-1600712(,%fp)	# restore
	or	%s27,0,%s18
	ld	%s24,-1600688(,%fp)	# restore
	ld	%s26,-1600608(,%fp)	# restore
	ld	%s23,-1600696(,%fp)	# restore
	br.l	.L4.30
.L4.58:
# line 538
	ld	%s0,192(,%fp)	# colidx_x
	or	%s25,0,%s60
	ld	%s6,-1600088(,%fp)	# mask
	or	%s26,0,%s57
	ld	%s7,-1600080(,%fp)	# merge_row_order
	or	%s27,0,%s62
	ldl.sx	%s61,-1600212(,%fp)	# sellcs_matrix.C
	or	%s4,0,%s58
	or	%s1,0,%s54
	st	%s61,240(,%sp)
	or	%s2,0,%s23
	or	%s5,0,%s24
	lea	%s12,merge_arr@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,merge_arr@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# merge_arr
# line 541
	ldl.sx	%s3,-799992(,%fp)	# next_res_size
# line 542

	brlt.w	0,%s3,.L4.60
	or	%s57,0,%s26
	or	%s60,0,%s25
	or	%s62,0,%s27
	br.l	.L4.59
.L4.60:
	subs.w.sx	%s61,0,%s3
	smvl	%s56
	subs.w.sx	%s55,0,%s61
# line 544
	dld	%s59,192(,%fp)	# colidx_x
# line 542
	mins.w.sx	%s60,%s55,%s56
	or	%s57,0,%s55
	muls.l	%s58,4,%s60
	or	%s62,0,(0)1
	or	%s63,0,%s23
.L4.61:
# line 544
	adds.l	%s61,%s63,%s62
	adds.l	%s56,%s59,%s62
	lvl	%s60
	vldl.sx	%v27,4,%s61	# *(merge_res_tmp)
# line 542
	adds.l	%s62,%s62,%s58
# line 544
	vstl	%v27,4,%s56	# *(colidx_x)
# line 542
	subs.w.sx	%s57,%s57,%s60

	brge.w	0,%s57,.L4.62
	mins.w.sx	%s60,%s57,%s60
	br.l	.L4.61
.L4.62:
	or	%s57,0,%s26
	or	%s60,0,%s25
	or	%s62,0,%s27
	or	%s23,0,%s63
	br.l	.L4.59
.L4.27:
	st	%s24,-1600688(,%fp)	# spill
	st	%s23,-1600696(,%fp)	# spill
# line 521
	lea	%s61,-99993
	adds.w.sx	%s55,%s61,%s3
# line 524
	dld	%s61,192(,%fp)	# colidx_x
	or	%s62,0,%s55
# line 521
	subs.w.sx	%s60,0,%s3
	or	%s58,0,%s61
	or	%s1,0,%s60
	ld	%s59,-1600080(,%fp)	# merge_row_order
	or	%s57,0,%s3
	ld	%s60,-1600088(,%fp)	# mask
	or	%s63,0,%s54
	or	%s61,0,%s3
	st	%s61,-1600704(,%fp)	# spill
	or	%s18,0,%s25
	or	%s25,0,%s60
.L4.63:
	cmps.w.sx	%s61,%s62,(0)1
	lea	%s56,99993
	cmov.w.lt	%s56,%s57,%s61

	brlt.w	0,%s56,.L4.64
	or	%s2,0,%s57
	or	%s3,0,%s62
.L4.65:

	brlt.w	0,%s56,.L4.66
	or	%s61,0,%s1
	or	%s62,0,%s3
	or	%s57,0,%s2
.L4.67:
	lea	%s55,-99993
	adds.w.sx	%s62,%s55,%s62
	lea	%s56,-99993
	adds.w.sx	%s57,%s56,%s57
	lea	%s54,399972
	adds.l	%s63,%s54,%s63
	lea	%s53,399972
	adds.l	%s58,%s53,%s58
	lea	%s56,99993
	adds.w.sx	%s61,%s56,%s61

	brgt.w	0,%s61,.L4.68
	or	%s25,0,%s18
	ld	%s24,-1600688(,%fp)	# restore
	ld	%s3,-1600704(,%fp)	# restore
	ld	%s23,-1600696(,%fp)	# restore
	br.l	.L4.28
.L4.68:
	or	%s1,0,%s61
	br.l	.L4.63
.L4.66:
	subs.w.sx	%s53,0,%s56
	smvl	%s23
	subs.w.sx	%s24,0,%s53
	or	%s6,0,%s63
	muls.l	%s0,16,%s24
	st	%s0,-1600296(,%fp)	# spill
	lea	%s12,__grow_stack@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__grow_stack@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __grow_stack
	lea	%s53,408
	adds.l	%s56,%sp,%s53
	muls.w.sx	%s53,8,%s24
	or	%s47,0,%s56
	mins.w.sx	%s61,%s24,%s23
	adds.l	%s60,%s56,%s53
	muls.l	%s55,4,%s61
	or	%s51,0,%s24
	muls.w.sx	%s54,8,%s61
	or	%s62,0,%fp
	or	%s57,0,(0)1
	muls.w.sx	%s52,8,%s23
	or	%s63,0,%s24
	or	%s4,0,%s59
	or	%s5,0,%s58
	or	%s58,0,%s60
	ld	%s7,-1600296(,%fp)	# restore
	or	%s59,0,%s25
.L4.69:
# line 529
	lea	%s53,-1199992
	adds.l	%s53,%s62,%s53
	lea	%s50,64
	adds.l	%s49,%s60,%s57
	lvl	%s61
	vldl.sx	%v54,4,%s53	# j$24
	lea	%s53,-1599968
	adds.l	%s53,%s62,%s53
	adds.l	%s48,%s56,%s57
# line 521
	adds.l	%s62,%s62,%s55
	or	%s54,0,%s54
	adds.l	%s57,%s57,%s54
	or	%s54,0,%s52
	subs.w.sx	%s51,%s51,%s61
# line 529
	vdivs.w.sx	%v53,%v54,%s50
	vsla.w.sx	%v52,%v53,6
	vsubs.w.sx	%v51,%v54,%v52
	vsubs.w.sx	%v50,63,%v51
	vbrd	%v49,1
	vsll	%v48,%v49,%v50
	vst	%v48,8,%s49
	vldl.sx	%v47,4,%s53	# j$25
	vor	%v47,(0)1,%v47
	vmuls.l	%v46,8,%v47
	vst	%v46,8,%s48
# line 521

	brge.w	0,%s51,.L4.70
	mins.w.sx	%s61,%s51,%s61
	br.l	.L4.69
.L4.70:
	or	%s56,0,%s63
# line 529
	or	%s61,0,(0)1
	or	%s60,0,%s59
	or	%s57,0,%s58
	or	%s62,0,%s47
.L4.71:
	ld	%s54,0(%s61,%s62)
# line 521
	adds.w.sx	%s56,%s56,(0)0
# line 529
	ld	%s55,0(%s61,%s57)
# line 521
	adds.l	%s61,8,%s61
# line 529
	ld	%s53,0(%s54,%s60)	# *(mask)
	or	%s53,%s55,%s53
	st	%s53,0(%s54,%s60)	# *(mask)
# line 521

	brlt.w	0,%s56,.L4.71
	subs.l	%s0,0,%s7
	lea	%s12,__grow_stack@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__grow_stack@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __grow_stack
	or	%s61,0,%s1
	or	%s62,0,%s3
	or	%s57,0,%s2
	or	%s63,0,%s6
	or	%s58,0,%s5
	or	%s59,0,%s4
	or	%s25,0,%s60
	br.l	.L4.67
.L4.64:
	subs.w.sx	%s61,0,%s56
	smvl	%s55
	subs.w.sx	%s61,0,%s61
	or	%s54,0,(0)1
	mins.w.sx	%s60,%s61,%s55
	or	%s52,0,%s56
	muls.l	%s55,4,%s60
	or	%s56,0,%s61
	or	%s2,0,%s57
	or	%s57,0,%s55
	or	%s3,0,%s62
	or	%s62,0,%s54
.L4.72:
# line 524
	adds.l	%s61,%s63,%s62
	lvl	%s60
	vldl.sx	%v63,4,%s61	# *(col_y_tmp_tmp)
# line 525
	vsfa	%v62,%v63,2,%s59
	vgtl.sx	%v61,%v62,0,0	# *(merge_row_order)
# line 524
	adds.l	%s61,%s58,%s62
# line 528
	lea	%s55,64
# line 521
	subs.w.sx	%s56,%s56,%s60
# line 527
	lea	%s54,-1199992
	adds.l	%s54,%fp,%s54
# line 528
	lea	%s53,-1599968
# line 527
	adds.l	%s54,%s54,%s62
# line 528
	adds.l	%s53,%fp,%s53
	adds.l	%s53,%s53,%s62
# line 521
	adds.l	%s62,%s62,%s57
# line 524
	vstl	%v63,4,%s61	# *(colidx_x)
# line 526
	ldl.sx	%s61,-1600212(,%fp)	# sellcs_matrix.C
	vdivs.w.sx	%v60,%v61,%s61
# line 527
	vmuls.w.sx	%v59,%s61,%v60
	vsubs.w.sx	%v58,%v61,%v59
	vstl	%v58,4,%s54	# j$24
# line 528
	vdivs.w.sx	%v57,%v58,%s55
	vsla.w.sx	%v56,%v60,2
	vadds.w.sx	%v55,%v56,%v57
	vstl	%v55,4,%s53	# j$25
# line 521

	brge.w	0,%s56,.L4.73
	mins.w.sx	%s60,%s56,%s60
	br.l	.L4.72
.L4.73:
	or	%s56,0,%s52
	br.l	.L4.65
.L4.26:
# line 489
	ldl.sx	%s61,-800004(,%fp)	# SWITCH_TO_SPMV

	brgt.w	%s53,%s61,.L4.74
	st	%s29,-1600520(,%fp)	# spill
# line 502
	or	%s55,8,(0)1
	or	%s1,4,(0)1
	stl	%s55,-16(,%fp)	# j$183
	ld	%s0,-1600744(,%fp)	# restore
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	ld	%s2,-1600752(,%fp)	# restore
	or	%s6,0,%s25
	or	%s3,0,%s29
	st	%s2,192(,%sp)
	st	%s29,200(,%sp)
	ld	%s4,-1600408(,%fp)	# restore
	st	%s4,208(,%sp)
	ld	%s5,-1600336(,%fp)	# restore
	st	%s5,216(,%sp)
	st	%s25,224(,%sp)
	ld	%s7,-1600384(,%fp)	# restore
	st	%s7,232(,%sp)
	ld	%s61,-1600360(,%fp)	# restore
	st	%s61,240(,%sp)
	st	%s30,248(,%sp)
	st	%s31,256(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s53,-1600592(,%fp)	# restore
	or	%s62,0,%s26
	ld	%s29,-1600416(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
	br.l	.L4.34
.L4.74:
	st	%s29,-1600520(,%fp)	# spill
# line 491
	or	%s55,8,(0)1
	or	%s1,4,(0)1
	stl	%s55,-400008(,%fp)	# j$162
	ld	%s0,-1600760(,%fp)	# restore
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	ld	%s2,-1600768(,%fp)	# restore
	or	%s6,0,%s25
	or	%s3,0,%s29
	st	%s2,192(,%sp)
	st	%s29,200(,%sp)
	ld	%s4,-1600384(,%fp)	# restore
	st	%s4,208(,%sp)
	ld	%s5,-1600360(,%fp)	# restore
	st	%s5,216(,%sp)
	st	%s25,224(,%sp)
	ld	%s7,-1600408(,%fp)	# restore
	st	%s7,232(,%sp)
	st	%s21,240(,%sp)
	st	%s30,248(,%sp)
	st	%s31,256(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s53,-1600592(,%fp)	# restore
	or	%s62,0,%s26
	ld	%s29,-1600416(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
	br.l	.L4.34
.L4.25:
# line 459
	ldl.sx	%s61,-800004(,%fp)	# SWITCH_TO_SPMV

	brgt.w	%s53,%s61,.L4.75
	st	%s29,-1600520(,%fp)	# spill
# line 473
	or	%s55,9,(0)1
	or	%s1,4,(0)1
	stl	%s55,-400004(,%fp)	# j$140
	ld	%s0,-1600656(,%fp)	# restore
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	ld	%s2,-1600664(,%fp)	# restore
	or	%s7,0,%s25
	or	%s6,0,%s20
	st	%s2,192(,%sp)
	st	%s29,200(,%sp)
	st	%s30,208(,%sp)
	ld	%s5,-1600384(,%fp)	# restore
	or	%s4,0,%s30
	or	%s3,0,%s29
	st	%s5,216(,%sp)
	st	%s20,224(,%sp)
	st	%s25,232(,%sp)
	ld	%s61,-1600408(,%fp)	# restore
	st	%s61,240(,%sp)
	st	%s21,248(,%sp)
	ld	%s61,-1600336(,%fp)	# restore
	st	%s61,256(,%sp)
	st	%s31,264(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s53,-1600592(,%fp)	# restore
	or	%s62,0,%s26
	ld	%s29,-1600416(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
	br.l	.L4.34
.L4.75:
	st	%s29,-1600520(,%fp)	# spill
# line 461
	or	%s55,6,(0)1
	or	%s1,4,(0)1
	stl	%s55,-400000(,%fp)	# j$120
	ld	%s0,-1600672(,%fp)	# restore
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	ld	%s2,-1600680(,%fp)	# restore
	or	%s7,0,%s20
	or	%s5,0,%s21
	st	%s2,192(,%sp)
	st	%s30,200(,%sp)
	ld	%s4,-1600408(,%fp)	# restore
	or	%s3,0,%s30
	st	%s4,208(,%sp)
	st	%s21,216(,%sp)
	ld	%s6,-1600384(,%fp)	# restore
	st	%s6,224(,%sp)
	st	%s20,232(,%sp)
	st	%s31,240(,%sp)
	ld	%s34,-1600432(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s53,-1600592(,%fp)	# restore
	or	%s62,0,%s26
	ld	%s29,-1600416(,%fp)	# restore
	ld	%s35,-1600424(,%fp)	# restore
	ld	%s26,-1600512(,%fp)	# restore
	br.l	.L4.34
.L4.23:
# line 455
	or	%s1,0,(0)1
	or	%s34,0,%s53
	st	%s34,-1600592(,%fp)	# spill
	ld	%s0,-1600536(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	ld	%s53,-1600592(,%fp)	# restore
	br.l	.L4.24
.L4.21:
# line 448
	or	%s1,0,(0)1
	ld	%s0,-1600544(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 449
	ld	%s54,-1600136(,%fp)	# t2.tv_sec
	ld	%s53,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s62,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s62,%s34
	cvt.d.l	%s34,%s34
	lea	%s59,-755914244
	lea.sl	%s63,1062232654(,%s59)
	fmul.d	%s34,%s63,%s34
	fadd.d	%s34,%s53,%s34
	ld	%s63,-1600584(,%fp)	# restore
	fadd.d	%s63,%s34,%s63
	st	%s63,-1600584(,%fp)	# spill
	br.l	.L4.22
.L4.19:
# line 437
	or	%s1,0,(0)1
	ld	%s0,-1600536(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	br.l	.L4.20
.L4.17:
# line 432
	ld	%s61,248(,%fp)	# num_iter
	ld	%s63,200(,%fp)	# nnzx
	ldl.sx	%s54,0(,%s61)	# *(num_iter)
	ldl.sx	%s61,0(,%s63)	# *(nnzx)
	muls.l	%s53,4,%s54
	ld	%s54,208(,%fp)	# frontier
	stl	%s61,0(%s53,%s54)	# *(frontier)
	br.l	.L4.18
.L4.15:
# line 426
	or	%s1,0,(0)1
	ld	%s0,-1600544(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 427
	ld	%s54,-1600136(,%fp)	# t2.tv_sec
	ld	%s53,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s62,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s62,%s34
	ld	%s61,248(,%fp)	# num_iter
	cvt.d.l	%s34,%s34
	lea	%s63,-755914244
	lea.sl	%s63,1062232654(,%s63)
	fmul.d	%s34,%s63,%s34
	ldl.sx	%s59,0(,%s61)	# *(num_iter)
	fadd.d	%s34,%s53,%s34
	muls.l	%s59,8,%s59
	ld	%s61,232(,%fp)	# iter_times
	ld	%s63,-1600576(,%fp)	# restore
	st	%s34,0(%s59,%s61)	# *(iter_times)
# line 428
	fadd.d	%s63,%s34,%s63
	st	%s63,-1600576(,%fp)	# spill
	br.l	.L4.16
.L4.13:
# line 315
	or	%s1,0,(0)1
	ld	%s0,-1600536(,%fp)	# restore
	ld	%s34,-1600528(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	br.l	.L4.14
.L4.11:
# line 307
	or	%s1,0,(0)1
	or	%s26,0,%s62
	ld	%s34,-1600528(,%fp)	# restore
	ld	%s0,-1600544(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
# line 308
	ld	%s54,-1600136(,%fp)	# t2.tv_sec
	or	%s62,0,%s26
	ld	%s53,-1600120(,%fp)	# t1.tv_sec
	lea.sl	%s63,1083129856
	subs.l	%s53,%s54,%s53
	ld	%s61,-1600128(,%fp)	# t2.tv_usec
	cvt.d.l	%s53,%s53
	ld	%s34,-1600112(,%fp)	# t1.tv_usec
	fmul.d	%s53,%s63,%s53
	subs.l	%s34,%s61,%s34
	cvt.d.l	%s34,%s34
	lea	%s63,-755914244
	lea.sl	%s63,1062232654(,%s63)
	fmul.d	%s34,%s63,%s34
	fadd.d	%s34,%s53,%s34
	ld	%s63,-1600552(,%fp)	# restore
	fadd.d	%s63,%s34,%s63
	st	%s63,-1600552(,%fp)	# spill
	br.l	.L4.12
.L4.9:
	lea	%s54,0
# line 291
	stl	%s54,-800012(,%fp)	# x_max
# line 292
	ldl.sx	%s54,-1600224(,%fp)	# sellcs_matrix.nrows
	stl	%s54,-800016(,%fp)	# x_min
# line 293
	ldl.sx	%s18,0(,%s61)	# *(nnzx)

	brlt.w	0,%s18,.L4.76
	ld	%s0,-1600560(,%fp)	# restore
	or	%s18,0,%s62
	ld	%s2,-1600568(,%fp)	# restore
	ld	%s26,-1600432(,%fp)	# restore
.L4.77:
# line 298
	or	%s55,3,(0)1
	or	%s1,4,(0)1
	stl	%s55,-799988(,%fp)	# j$49
	ld	%s3,200(,%fp)	# nnzx
	or	%s34,0,%s0
	st	%s34,-1600560(,%fp)	# spill
	st	%s3,200(,%sp)
	ld	%s4,192(,%fp)	# colidx_x
	or	%s34,0,%s2
	st	%s34,-1600568(,%fp)	# spill
	st	%s4,208(,%sp)
	ld	%s5,-1600256(,%fp)	# bucket
	st	%s5,216(,%sp)
	st	%s0,176(,%sp)
	st	%s1,184(,%sp)
	st	%s2,192(,%sp)
	or	%s12,0,%s26
	bsic	%lr,(,%s12)
	or	%s62,0,%s18
	br.l	.L4.10
.L4.76:
# line 293
	subs.w.sx	%s61,0,%s18
	smvl	%s56
	subs.w.sx	%s55,0,%s61
	ld	%s61,192(,%fp)	# colidx_x
	mins.w.sx	%s60,%s55,%s56
	or	%s58,0,%s55
	or	%s63,0,%s60
# line 295
	lvl	%s63
	vbrd	%v26,0
# line 293
	muls.l	%s59,4,%s60
	ld	%s57,-1600560(,%fp)	# restore
	or	%s18,0,%s62
	or	%s62,0,%s61
	ld	%s2,-1600568(,%fp)	# restore
	ld	%s26,-1600432(,%fp)	# restore
# line 296
	vbrd	%v25,%s54
.L4.78:
	or	%s61,0,%s62
# line 295
	lvl	%s60
	vldl.sx	%v24,4,%s61	# *(colidx_x)
# line 293
	adds.l	%s62,%s62,%s59
	subs.w.sx	%s58,%s58,%s60
# line 295
	vmaxs.w.sx	%v26,%v24,%v26
# line 296
	vmins.w.sx	%v25,%v24,%v25
# line 293

	brge.w	0,%s58,.L4.79
	mins.w.sx	%s60,%s58,%s60
	br.l	.L4.78
.L4.79:
	or	%s62,0,(0)1
# line 295
	lvl	%s63
	vrmaxs.w.fst.sx	%v15,%v26
	lvs	%s55,%v15(%s62)
	stl	%s55,-800012(,%fp)	# x_max
# line 296
	vrmins.w.fst.sx	%v14,%v25
	lvs	%s61,%v14(%s62)
	stl	%s61,-800016(,%fp)	# x_min
	st	%s26,-1600432(,%fp)	# spill
	or	%s0,0,%s57
	br.l	.L4.77
.L4.7:
# line 287
	or	%s1,0,(0)1
	or	%s26,0,%s62
	ld	%s34,-1600528(,%fp)	# restore
	ld	%s0,-1600536(,%fp)	# restore
	or	%s12,0,%s34
	bsic	%lr,(,%s12)
	or	%s62,0,%s26
	br.l	.L4.8
.L4.4:
	st	%s18,-1600640(,%fp)	# spill
	st	%s19,-1600584(,%fp)	# spill
	st	%s20,-1600552(,%fp)	# spill
	st	%s21,-1600576(,%fp)	# spill
	st	%s22,-1600600(,%fp)	# spill
	st	%s24,-1600432(,%fp)	# spill
	st	%s23,-1600456(,%fp)	# spill
# line 243
	subs.w.sx	%s61,0,%s61
	smvl	%s58
	subs.w.sx	%s55,0,%s61
# line 246
	dld	%s61,-1600184(,%fp)	# sellcs_matrix.row_order
# line 243
	mins.w.sx	%s62,%s55,%s58
	or	%s53,0,%s55
	muls.l	%s54,4,%s62
	or	%s57,0,%s62
	lvl	%s62
	vseq	%v19
	or	%s63,0,%s61
	ld	%s60,-1600080(,%fp)	# merge_row_order
	or	%s59,0,(0)1
	or	%s29,0,%s27
	ld	%s25,-1600712(,%fp)	# restore
	or	%s35,0,%s31
	or	%s36,0,%s32
	or	%s34,0,%s33
	ld	%s26,-1600776(,%fp)	# restore
.L4.80:
	or	%s61,0,%s63
# line 246
	lvl	%s62
	vldl.sx	%v18,4,%s61	# *(sellcs_matrix.row_order)
# line 243
	adds.l	%s63,%s63,%s54
	subs.w.sx	%s53,%s53,%s62
# line 246
	vsfa	%v17,%v18,2,%s60
	vadds.w.sx	%v16,%s59,%v19
# line 243
	adds.w.sx	%s59,%s59,%s57
# line 246
	vscl	%v16,%v17,0,0	# *(merge_row_order)
# line 243

	brge.w	0,%s53,.L4.81
	mins.w.sx	%s62,%s53,%s62
	br.l	.L4.80
.L4.81:
	br.l	.L4.5
.L4.3:
	or	%s0,0,%s25
	or	%s2,0,%s26
	or	%s3,0,%s27
	or	%s4,0,%s28
	or	%s5,0,%s29
	or	%s6,0,%s30
	br.l	.L4.2
.L4.0:
# line 176
	dld	%s61,-1600168(,%fp)	# sellcs_matrix.vop_pointers
# line 174
	or	%s60,0,(0)1
	ld	%s56,-1600096(,%fp)	# slice_idx_min
	or	%s63,0,%s61
	ld	%s58,-1600104(,%fp)	# slice_idx_max
	dld	%s47,-1600144(,%fp)	# sellcs_matrix.min_index
	dld	%s48,-1600152(,%fp)	# sellcs_matrix.max_index
.L4.82:
# line 176
	ldl.sx	%s61,4(,%s63)	# *(sellcs_matrix.vop_pointers)
	ldl.sx	%s62,0(,%s63)	# *(sellcs_matrix.vop_pointers)
	subs.w.sx	%s61,%s61,%s62

	brlt.w	0,%s61,.L4.83
.L4.84:
# line 174
	adds.l	%s63,4,%s63
	adds.l	%s60,4,%s60
	ldl.sx	%s61,-1600204(,%fp)	# sellcs_matrix.nslices
	adds.w.sx	%s59,%s59,(63)0

	brlt.w	%s59,%s61,.L4.82
	st	%s24,-1600528(,%fp)	# spill
	br.l	.L4.1
.L4.83:
# line 176
	ldl.sx	%s57,0(%s60,%s58)	# *(slice_idx_max)
	ldl.sx	%s55,0(%s60,%s56)	# *(slice_idx_min)

	brlt.w	0,%s61,.L4.85
.L4.86:
# line 180
	stl	%s55,0(%s60,%s56)	# *(slice_idx_min)
	stl	%s57,0(%s60,%s58)	# *(slice_idx_max)
	br.l	.L4.84
.L4.85:
# line 176
	subs.w.sx	%s61,0,%s61
	smvl	%s46
	subs.w.sx	%s61,0,%s61
	or	%s45,0,%s62
	mins.w.sx	%s46,%s61,%s46
	muls.l	%s45,4,%s45
	or	%s54,0,%s46
# line 178
	lvl	%s54
	vbrd	%v23,%s57
# line 176
	muls.l	%s44,4,%s46
	or	%s57,0,%s61
	adds.l	%s61,%s45,%s48
	adds.l	%s45,%s45,%s47
	or	%s62,0,(0)1
	or	%s52,0,%s59
	or	%s49,0,%s56
	or	%s51,0,%s58
	or	%s50,0,%s60
	or	%s53,0,%s63
	or	%s63,0,%s61
	or	%s59,0,%s45
	or	%s60,0,%s46
	or	%s58,0,%s44
# line 179
	vbrd	%v22,%s55
.L4.87:
# line 178
	adds.l	%s61,%s63,%s62
# line 179
	adds.l	%s56,%s59,%s62
# line 178
	lvl	%s60
	vldl.sx	%v21,4,%s61	# *(sellcs_matrix.max_index)
# line 176
	adds.l	%s62,%s62,%s58
	subs.w.sx	%s57,%s57,%s60
# line 178
	vmaxs.w.sx	%v23,%v21,%v23
# line 179
	vldl.sx	%v20,4,%s56	# *(sellcs_matrix.min_index)
	vmins.w.sx	%v22,%v20,%v22
# line 176

	brge.w	0,%s57,.L4.88
	mins.w.sx	%s60,%s57,%s60
	br.l	.L4.87
.L4.88:
	or	%s62,0,(0)1
# line 178
	lvl	%s54
	vrmaxs.w.fst.sx	%v13,%v23
	lvs	%s57,%v13(%s62)
# line 179
	vrmins.w.fst.sx	%v12,%v22
	lvs	%s55,%v12(%s62)
	or	%s63,0,%s53
	or	%s59,0,%s52
	or	%s58,0,%s51
	or	%s60,0,%s50
	or	%s56,0,%s49
	br.l	.L4.86
.L_5.EoE:
	.set	.L.5.2auto_size,	0xffffffffffe78f00	# 1601792 Bytes
	.size	run_custom_bfs_test,	.-run_custom_bfs_test
# ============ End  run_custom_bfs_test ============
# ============ Begin  run_custom_bfs_test$1 ============
	.balign 16
# line 227
	.type	run_custom_bfs_test$1,@function
run_custom_bfs_test$1:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	lea     %sp,-256(,%fp)
	brge.l.t	%sp,%sl,.L_6.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_6.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,24,%s2
	adds.l	%s61,16,%s2
	ld	%s62,0(,%s62)
	adds.l	%s2,8,%s2
	ld	%s61,0(,%s61)
	ld	%s2,0(,%s2)
	st	%s63,-8(,%fp)	# task_sizes
	st	%s2,-32(,%fp)	# sellcs_matrix
	st	%s61,-16(,%fp)	# bfs_x
	st	%s62,-24(,%fp)	# bfs_y
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 228
	adds.w.sx	%s62,%s62,(0)0
# line 227
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 228
	adds.w.sx	%s1,%s1,(0)0
	or	%s28,0,%s18
	adds.w.sx	%s27,%s18,%s1
	mins.w.sx	%s62,%s62,%s27
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L5.0
.L5.1:
# line 233
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L5.0:
	ld	%s1,-8(,%fp)	# task_sizes
	or	%s62,0,%s18
# line 228
	muls.l	%s62,4,%s62
	ld	%s24,-24(,%fp)	# bfs_y
	or	%s26,0,%s63
	adds.l	%s25,%s1,%s62
	ld	%s23,-16(,%fp)	# bfs_x
	or	%s18,0,%s0
	ld	%s0,-32(,%fp)	# sellcs_matrix
.L5.2:
# line 232
	ld	%s1,0(,%s23)	# *(bfs_x)
	or	%s29,0,%s0
	ld	%s2,0(,%s24)	# *(bfs_y)
	ldl.sx	%s3,0(,%s25)	# *(task_sizes)
	ldl.sx	%s4,4(,%s25)	# *(task_sizes)
	lea	%s12,kernel_SELLCS_DFC@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,kernel_SELLCS_DFC@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# kernel_SELLCS_DFC
# line 228
	adds.l	%s25,4,%s25
	ldl.sx	%s4,0(,%s26)	# chunk_size
	adds.w.sx	%s28,%s28,(63)0
	adds.w.sx	%s4,%s4,(0)0
	mins.w.sx	%s3,%s4,%s27
	adds.w.sx	%s3,%s3,(63)0

	brlt.w	%s28,%s3,.L5.3
	or	%s0,0,%s18
	br.l	.L5.1
.L5.3:
	or	%s0,0,%s29
	br.l	.L5.2
.L_6.EoE:
	.set	.L.6.2auto_size,	0xffffffffffffff00	# 256 Bytes
	.size	run_custom_bfs_test$1,	.-run_custom_bfs_test$1
# ============ End  run_custom_bfs_test$1 ============
# ============ Begin  run_custom_bfs_test$2 ============
	.balign 16
# line 298
	.type	run_custom_bfs_test$2,@function
run_custom_bfs_test$2:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	lea     %sp,-224(,%fp)
	brge.l.t	%sp,%sl,.L_7.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_7.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,16,%s2
	adds.l	%s2,8,%s2
	ld	%s62,0(,%s62)
	ld	%s2,0(,%s2)
	st	%s63,-16(,%fp)	# nnzx
	ld	%s63,-16(,%fp)	# nnzx
	ldl.sx	%s61,0(,%s63)	# *(nnzx)
	st	%s2,-24(,%fp)	# colidx_x
	st	%s62,-32(,%fp)	# bucket
	adds.w.sx	%s61,%s1,%s61
# line 299
	ldl.sx	%s63,0(,%s63)	# *(nnzx)
# line 298
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
# line 299
	adds.w.sx	%s63,%s63,(0)0
# line 298
	muls.w.sx	%s18,%s0,%s1
# line 299
	adds.w.sx	%s1,%s1,(0)0
	adds.w.sx	%s1,%s18,%s1
	mins.w.sx	%s1,%s63,%s1
	adds.w.sx	%s1,%s1,(63)0

	brlt.w	%s18,%s1,.L6.0
.L6.1:
# line 303
	lea	%s12,__vthr$_barrier@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier
# Start of epilogue codes
	ld	%s18,48(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L6.0:
# line 299
	subs.w.sx	%s1,0,%s1
	smvl	%s62
	adds.w.sx	%s1,%s18,%s1
	ld	%s54,-24(,%fp)	# colidx_x
	subs.w.sx	%s1,0,%s1
	or	%s53,0,%s18
	mins.w.sx	%s61,%s1,%s62
	or	%s56,0,%s1
	muls.l	%s57,4,%s61
	or	%s58,0,%s61
	lvl	%s61
	vseq	%v63
	muls.l	%s53,4,%s53
	ld	%s60,-32(,%fp)	# bucket
	or	%s59,0,%s18
	adds.l	%s53,%s54,%s53
	or	%s55,0,%s0
	or	%s63,0,%s53
.L6.2:
	or	%s62,0,%s63
# line 302
	lvl	%s61
	vldl.sx	%v62,4,%s62	# *(colidx_x)
# line 299
	adds.l	%s63,%s63,%s57
	subs.w.sx	%s56,%s56,%s61
# line 302
	vsfa	%v61,%v62,2,%s60
	vadds.w.sx	%v60,%s59,%v63
# line 299
	adds.w.sx	%s59,%s59,%s58
# line 302
	vscl	%v60,%v61,0,0	# *(bucket)
# line 299

	brge.w	0,%s56,.L6.3
	mins.w.sx	%s61,%s56,%s61
	br.l	.L6.2
.L6.3:
	or	%s0,0,%s55
	br.l	.L6.1
.L_7.EoE:
	.set	.L.7.2auto_size,	0xffffffffffffff20	# 224 Bytes
	.size	run_custom_bfs_test$2,	.-run_custom_bfs_test$2
# ============ End  run_custom_bfs_test$2 ============
# ============ Begin  run_custom_bfs_test$3 ============
	.section .rodata
	.balign 16
	.type	.LP.__string.2,@object
.LP.__string.2:
	.byte	115
	.byte	112
	.byte	109
	.byte	118
	.zero	1
	.balign 8
	.type	.LP.__string.3,@object
.LP.__string.3:
	.byte	115
	.byte	112
	.byte	109
	.byte	115
	.byte	112
	.byte	118
	.zero	1
	.balign 8
	.type	.LP.__string.4,@object
.LP.__string.4:
	.byte	109
	.byte	101
	.byte	114
	.byte	103
	.byte	101
	.zero	1
	.text
	.balign 16
# line 318
	.type	run_custom_bfs_test$3,@function
run_custom_bfs_test$3:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s19,56(,%fp)
	st	%s20,64(,%fp)
	st	%s21,72(,%fp)
	st	%s22,80(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	st	%s33,168(,%fp)
	lea     %sp,-976(,%fp)
	brge.l.t	%sp,%sl,.L_8.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_8.EoP:
# End of prologue codes
	lea	%s63,200
	adds.l	%s63,%s63,%s2
	lea	%s62,192
	adds.l	%s62,%s62,%s2
	ld	%s63,0(,%s63)
	adds.l	%s61,56,%s2
	ld	%s62,0(,%s62)
	adds.l	%s60,48,%s2
	lea	%s59,184
	adds.l	%s59,%s59,%s2
	lea	%s58,176
	adds.l	%s58,%s58,%s2
	ld	%s59,0(,%s59)
	adds.l	%s57,40,%s2
	ld	%s58,0(,%s58)
	adds.l	%s54,32,%s2
	lea	%s53,168
	adds.l	%s53,%s53,%s2
	lea	%s52,160
	adds.l	%s52,%s52,%s2
	ld	%s53,0(,%s53)
	adds.l	%s51,24,%s2
	ld	%s52,0(,%s52)
	adds.l	%s50,16,%s2
	lea	%s49,152
	adds.l	%s49,%s49,%s2
	lea	%s48,144
	adds.l	%s48,%s48,%s2
	ld	%s49,0(,%s49)
	adds.l	%s47,8,%s2
	ld	%s48,0(,%s48)
	lea	%s46,136
	adds.l	%s46,%s46,%s2
	lea	%s45,128
	adds.l	%s45,%s45,%s2
	ld	%s46,0(,%s46)
	ld	%s45,0(,%s45)
	lea	%s44,120
	adds.l	%s44,%s44,%s2
	lea	%s43,112
	adds.l	%s43,%s43,%s2
	ld	%s44,0(,%s44)
	ld	%s43,0(,%s43)
	lea	%s42,104
	adds.l	%s42,%s42,%s2
	lea	%s41,96
	adds.l	%s41,%s41,%s2
	ld	%s42,0(,%s42)
	ld	%s41,0(,%s41)
	lea	%s40,88
	adds.l	%s40,%s40,%s2
	lea	%s39,80
	adds.l	%s39,%s39,%s2
	ld	%s40,0(,%s40)
	ld	%s39,0(,%s39)
	lea	%s38,72
	adds.l	%s38,%s38,%s2
	lea	%s37,64
	adds.l	%s37,%s37,%s2
	ld	%s38,0(,%s38)
	ld	%s37,0(,%s37)
	ld	%s2,0(,%s2)
	ld	%s61,0(,%s61)
	ld	%s60,0(,%s60)
	ld	%s57,0(,%s57)
	ld	%s54,0(,%s54)
	ld	%s51,0(,%s51)
	ld	%s50,0(,%s50)
	ld	%s47,0(,%s47)
	st	%s2,-24(,%fp)	# task_sizes
	st	%s47,-32(,%fp)	# sellcs_matrix
	st	%s50,-72(,%fp)	# bit_flag
	st	%s51,-40(,%fp)	# nnzx
	st	%s54,-48(,%fp)	# SWITCH_TO_SPMV
	st	%s57,-56(,%fp)	# mode
	st	%s60,-64(,%fp)	# mask_x
	st	%s61,-112(,%fp)	# mask_y
	st	%s37,-80(,%fp)	# mask
	st	%s38,-88(,%fp)	# SWITCH_TO_SPMSPV
	st	%s39,-96(,%fp)	# slice_idx_max
	st	%s40,-104(,%fp)	# slice_idx_min
	st	%s41,-152(,%fp)	# bucket
	st	%s42,-120(,%fp)	# colidx_x
	st	%s43,-128(,%fp)	# x_max
	st	%s44,-136(,%fp)	# x_min
	st	%s45,-144(,%fp)	# colidx_y
	st	%s46,-192(,%fp)	# csc_matrix
	st	%s48,-160(,%fp)	# vop_length_ptr
	st	%s49,-168(,%fp)	# bfs_y
	st	%s52,-176(,%fp)	# col_y_tmp
	st	%s53,-184(,%fp)	# merge_row_order
	st	%s58,-224(,%fp)	# bfs_x
	st	%s59,-200(,%fp)	# thread_y_nnz
	st	%s62,-208(,%fp)	# s_bypass_cnt
	st	%s63,-216(,%fp)	# w_bypass_cnt
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 319
	adds.w.sx	%s62,%s62,(0)0
# line 318
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 319
	adds.w.sx	%s1,%s1,(0)0
	or	%s55,0,%s18
	adds.w.sx	%s56,%s18,%s1
	mins.w.sx	%s62,%s62,%s56
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L7.0
.L7.1:
# line 423
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s19,56(,%fp)
	ld	%s20,64(,%fp)
	ld	%s21,72(,%fp)
	ld	%s22,80(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	ld	%s33,168(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L7.0:
	ld	%s1,-24(,%fp)	# task_sizes
	or	%s62,0,%s18
# line 319
	muls.l	%s59,4,%s62
# line 334
	lea	%s62,-12
	adds.l	%s7,%fp,%s62
# line 319
	adds.l	%s1,%s1,%s59
	st	%s7,-304(,%fp)	# spill
	ld	%s51,-216(,%fp)	# w_bypass_cnt
	or	%s57,0,%s63
	ld	%s52,-208(,%fp)	# s_bypass_cnt
	or	%s45,0,%s63
	st	%s45,-384(,%fp)	# spill
	ld	%s53,-200(,%fp)	# thread_y_nnz
	adds.w.sx	%s58,%s18,(63)0
	ld	%s23,-224(,%fp)	# bfs_x
# line 334
	adds.l	%s26,%fp,(60)1
	ld	%s47,-184(,%fp)	# merge_row_order
# line 346
	adds.l	%s62,%fp,(61)1
	ld	%s60,-176(,%fp)	# col_y_tmp
	or	%s46,0,%s0
	st	%s47,-424(,%fp)	# spill
	st	%s62,-368(,%fp)	# spill
	st	%s60,-408(,%fp)	# spill
	st	%s46,-440(,%fp)	# spill
	ld	%s24,-168(,%fp)	# bfs_y
	or	%s63,0,%s1
	ld	%s62,-160(,%fp)	# vop_length_ptr
	ld	%s0,-192(,%fp)	# csc_matrix
	st	%s62,-416(,%fp)	# spill
	st	%s0,-432(,%fp)	# spill
	ld	%s60,-144(,%fp)	# colidx_y
	ld	%s47,-136(,%fp)	# x_min
	st	%s60,-360(,%fp)	# spill
	st	%s47,-312(,%fp)	# spill
	ld	%s46,-128(,%fp)	# x_max
	ld	%s62,-120(,%fp)	# colidx_x
	st	%s46,-320(,%fp)	# spill
	st	%s62,-328(,%fp)	# spill
	ld	%s46,-152(,%fp)	# bucket
	ld	%s62,-104(,%fp)	# slice_idx_min
	st	%s46,-336(,%fp)	# spill
	st	%s62,-344(,%fp)	# spill
	ld	%s46,-96(,%fp)	# slice_idx_max
	ld	%s48,-88(,%fp)	# SWITCH_TO_SPMSPV
	st	%s46,-352(,%fp)	# spill
	ld	%s25,-80(,%fp)	# mask
	ld	%s47,-112(,%fp)	# mask_y
	ld	%s60,-64(,%fp)	# mask_x
	st	%s47,-296(,%fp)	# spill
	st	%s60,-288(,%fp)	# spill
	ld	%s21,-56(,%fp)	# mode
	ld	%s49,-48(,%fp)	# SWITCH_TO_SPMV
	ld	%s50,-40(,%fp)	# nnzx
	ld	%s54,-72(,%fp)	# bit_flag
	ld	%s61,-32(,%fp)	# sellcs_matrix
# line 333
	lea	%s22,.LP.__string.2@LO
	and	%s22,%s22,(32)0
	lea.sl	%s22,.LP.__string.2@HI(,%s22)
# line 345
	lea	%s60,.LP.__string.3@LO
	and	%s60,%s60,(32)0
	lea.sl	%s60,.LP.__string.3@HI(,%s60)
	st	%s60,-392(,%fp)	# spill
# line 364
	lea	%s45,.LP.__string.4@LO
	and	%s45,%s45,(32)0
	lea.sl	%s45,.LP.__string.4@HI(,%s45)
	st	%s45,-376(,%fp)	# spill
.L7.2:
# line 326
	ldl.sx	%s62,4(,%s63)	# *(task_sizes)
	ldl.sx	%s18,0(,%s63)	# *(task_sizes)
	lea	%s60,0
	stl	%s60,-16(,%fp)	# nnz_perthread
	stl	%s60,-12(,%fp)	# th_bypass_slice
	stl	%s60,-8(,%fp)	# th_bypass_width
	ldl.sx	%s19,44(,%s61)	# *(sellcs_matrix).nslices

	brlt.w	%s18,%s19,.L7.3
.L7.4:
# line 319
	adds.l	%s63,4,%s63
	adds.l	%s59,4,%s59
	adds.w.sx	%s58,%s58,(63)0
	ldl.sx	%s62,0(,%s57)	# chunk_size
	adds.w.sx	%s55,%s55,(63)0
	adds.w.sx	%s62,%s62,(0)0
	mins.w.sx	%s19,%s62,%s56
	adds.w.sx	%s19,%s19,(63)0

	brlt.w	%s55,%s19,.L7.2
	ld	%s0,-440(,%fp)	# restore
	br.l	.L7.1
.L7.3:
# line 329
	ld1b.zx	%s60,0(,%s54)	# *(bit_flag)
	or	%s19,0,%s60

	brne.w	0,%s19,.L7.5
# line 389
	ld	%s60,0(,%s50)	# *(nnzx)
	ldl.sx	%s19,0(,%s49)	# *(SWITCH_TO_SPMV)
	ldl.sx	%s20,0(,%s60)	# *(*(nnzx))

	brgt.w	%s20,%s19,.L7.6
# line 399
	ldl.sx	%s19,0(,%s48)	# *(SWITCH_TO_SPMSPV)

	brle.w	%s20,%s19,.L7.7
.L7.8:
# line 419
	ldl.sx	%s19,-16(,%fp)	# nnz_perthread
	stl	%s19,0(%s59,%s53)	# *(thread_y_nnz)
# line 420
	ldl.sx	%s62,-12(,%fp)	# th_bypass_slice
	stl	%s62,0(%s59,%s52)	# *(s_bypass_cnt)
# line 421
	ldl.sx	%s62,-8(,%fp)	# th_bypass_width
	stl	%s62,0(%s59,%s51)	# *(w_bypass_cnt)
	br.l	.L7.4
.L7.7:
	ld	%s47,-312(,%fp)	# restore
	or	%s27,0,%s53
	ld	%s46,-320(,%fp)	# restore
	or	%s28,0,%s59
# line 401
	ldl.sx	%s47,0(,%s47)	# *(x_min)
	or	%s29,0,%s52
	ldl.sx	%s7,0(,%s46)	# *(x_max)
	or	%s30,0,%s51
	ld	%s46,-328(,%fp)	# restore
	or	%s31,0,%s54
	ld	%s4,0(,%s23)	# *(bfs_x)
	or	%s32,0,%s50
	ld	%s5,0(,%s46)	# *(colidx_x)
	or	%s33,0,%s49
	ld	%s46,-336(,%fp)	# restore
	or	%s34,0,%s48
	st	%s34,-232(,%fp)	# spill
	ld	%s3,0(,%s46)	# *(bucket)
	or	%s34,0,%s55
	st	%s34,-240(,%fp)	# spill
	ld	%s46,-344(,%fp)	# restore
	or	%s34,0,%s58
	st	%s34,-248(,%fp)	# spill
	ld	%s2,0(,%s46)	# *(slice_idx_min)
	or	%s34,0,%s63
	st	%s34,-256(,%fp)	# spill
	ld	%s46,-352(,%fp)	# restore
	or	%s34,0,%s56
	st	%s34,-264(,%fp)	# spill
	ld	%s1,0(,%s46)	# *(slice_idx_max)
	or	%s34,0,%s57
	st	%s34,-272(,%fp)	# spill
	st	%s47,240(,%sp)
	ld	%s47,0(,%s24)	# *(bfs_y)
	or	%s6,0,%s60
	or	%s0,0,%s61
	st	%s47,248(,%sp)
	ld	%s60,-360(,%fp)	# restore
	or	%s34,0,%s61
	st	%s34,-280(,%fp)	# spill
	ld	%s60,0(,%s60)	# *(colidx_y)
	st	%s60,256(,%sp)
	ld	%s60,0(,%s25)	# *(mask)
	st	%s60,288(,%sp)
	st	%s26,264(,%sp)
	st	%s18,272(,%sp)
	st	%s62,280(,%sp)
	ld	%s62,-304(,%fp)	# restore
	st	%s62,296(,%sp)
	ld	%s62,-368(,%fp)	# restore
	st	%s62,304(,%sp)
	lea	%s12,bfs_kernel_spmspv_SELLCS_DFC@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,bfs_kernel_spmspv_SELLCS_DFC@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# bfs_kernel_spmspv_SELLCS_DFC
	or	%s53,0,%s27
	or	%s59,0,%s28
	or	%s52,0,%s29
	or	%s51,0,%s30
	ld	%s61,-280(,%fp)	# restore
	or	%s54,0,%s31
	or	%s50,0,%s32
	or	%s49,0,%s33
	ld	%s48,-232(,%fp)	# restore
	ld	%s55,-240(,%fp)	# restore
	ld	%s58,-248(,%fp)	# restore
	ld	%s63,-256(,%fp)	# restore
	ld	%s56,-264(,%fp)	# restore
	ld	%s57,-272(,%fp)	# restore
	br.l	.L7.8
.L7.6:
# line 391
	ld	%s1,0(,%s23)	# *(bfs_x)
	or	%s27,0,%s53
	ld	%s2,0(,%s24)	# *(bfs_y)
	or	%s28,0,%s59
	ld	%s6,0(,%s25)	# *(mask)
	or	%s29,0,%s52
	or	%s30,0,%s51
	or	%s31,0,%s54
	or	%s32,0,%s50
	or	%s33,0,%s49
	or	%s34,0,%s48
	st	%s34,-232(,%fp)	# spill
	or	%s34,0,%s55
	st	%s34,-240(,%fp)	# spill
	or	%s34,0,%s58
	st	%s34,-248(,%fp)	# spill
	or	%s34,0,%s63
	st	%s34,-256(,%fp)	# spill
	or	%s34,0,%s56
	st	%s34,-264(,%fp)	# spill
	or	%s34,0,%s57
	st	%s34,-272(,%fp)	# spill
	or	%s5,0,%s62
	or	%s4,0,%s18
	or	%s0,0,%s61
	or	%s34,0,%s61
	st	%s34,-280(,%fp)	# spill
	or	%s3,0,%s26
	lea	%s12,bfs_kernel_spmv_SELLCS_NC_DFC@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,bfs_kernel_spmv_SELLCS_NC_DFC@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# bfs_kernel_spmv_SELLCS_NC_DFC
	or	%s53,0,%s27
	or	%s59,0,%s28
	or	%s52,0,%s29
	or	%s51,0,%s30
	ld	%s61,-280(,%fp)	# restore
	or	%s54,0,%s31
	or	%s50,0,%s32
	or	%s49,0,%s33
	ld	%s48,-232(,%fp)	# restore
	ld	%s55,-240(,%fp)	# restore
	ld	%s58,-248(,%fp)	# restore
	ld	%s63,-256(,%fp)	# restore
	ld	%s56,-264(,%fp)	# restore
	ld	%s57,-272(,%fp)	# restore
	br.l	.L7.8
.L7.5:
# line 331
	ld	%s60,0(,%s50)	# *(nnzx)
	ldl.sx	%s19,0(,%s49)	# *(SWITCH_TO_SPMV)
	ldl.sx	%s20,0(,%s60)	# *(*(nnzx))

	brgt.w	%s20,%s19,.L7.9
# line 343
	ldl.sx	%s19,0(,%s48)	# *(SWITCH_TO_SPMSPV)

	brle.w	%s20,%s19,.L7.10
	ld	%s45,-376(,%fp)	# restore
# line 364
	st	%s45,0(,%s21)	# *(mode)
	ld	%s45,-384(,%fp)	# restore
# line 365
	ldl.sx	%s62,0(,%s45)	# chunk_size
	adds.w.sx	%s19,%s20,%s62
	adds.w.sx	%s19,%s19,(0)0
	divs.w.sx	%s19,%s19,%s62
# line 367
	muls.w.sx	%s45,%s19,%s58
# line 366
	muls.w.sx	%s19,%s19,%s55
# line 367
	mins.w.sx	%s20,%s45,%s20
# line 368

	brlt.w	%s19,%s20,.L7.11
	br.l	.L7.8
.L7.11:
	ld	%s47,-296(,%fp)	# restore
	or	%s27,0,%s53
	ld	%s62,-408(,%fp)	# restore
	or	%s28,0,%s59
# line 370
	ld	%s47,0(,%s47)	# *(mask_y)
	or	%s29,0,%s52
	ld	%s6,0(,%s62)	# *(col_y_tmp)
	or	%s30,0,%s51
	ld	%s5,0(,%s24)	# *(bfs_y)
	or	%s31,0,%s54
	ld	%s46,-328(,%fp)	# restore
	or	%s32,0,%s50
	ld	%s62,-416(,%fp)	# restore
	or	%s33,0,%s49
	ld	%s3,0(,%s46)	# *(colidx_x)
	or	%s34,0,%s48
	st	%s34,-232(,%fp)	# spill
	ld	%s2,0(,%s62)	# *(vop_length_ptr)
	or	%s34,0,%s58
	st	%s34,-248(,%fp)	# spill
	ldl.sx	%s62,24(,%s61)	# *(sellcs_matrix).nrows
	or	%s34,0,%s63
	st	%s34,-256(,%fp)	# spill
	st	%s47,240(,%sp)
	ld	%s47,-424(,%fp)	# restore
	muls.w.sx	%s7,%s55,%s62
	or	%s34,0,%s56
	st	%s34,-264(,%fp)	# spill
	ld	%s47,0(,%s47)	# *(merge_row_order)
	or	%s34,0,%s57
	st	%s34,-272(,%fp)	# spill
	st	%s47,256(,%sp)
	ld	%s62,0(,%s25)	# *(mask)
	or	%s4,0,%s60
	or	%s34,0,%s55
	st	%s34,-240(,%fp)	# spill
	st	%s62,280(,%sp)
	st	%s26,248(,%sp)
	st	%s19,264(,%sp)
	st	%s20,272(,%sp)
	or	%s1,0,%s61
	or	%s34,0,%s61
	st	%s34,-280(,%fp)	# spill
	ld	%s0,-432(,%fp)	# restore
	lea	%s12,csc_spmspv_merge@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,csc_spmspv_merge@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# csc_spmspv_merge
	or	%s53,0,%s27
	or	%s59,0,%s28
	or	%s52,0,%s29
	or	%s51,0,%s30
	ld	%s61,-280(,%fp)	# restore
	or	%s54,0,%s31
	or	%s50,0,%s32
	or	%s49,0,%s33
	ld	%s48,-232(,%fp)	# restore
	ld	%s55,-240(,%fp)	# restore
	ld	%s58,-248(,%fp)	# restore
	ld	%s63,-256(,%fp)	# restore
	ld	%s56,-264(,%fp)	# restore
	ld	%s57,-272(,%fp)	# restore
	br.l	.L7.8
.L7.10:
	ld	%s60,-392(,%fp)	# restore
	or	%s27,0,%s53
	or	%s28,0,%s59
# line 345
	st	%s60,0(,%s21)	# *(mode)
	ld	%s60,-360(,%fp)	# restore
	or	%s29,0,%s52
	ld	%s47,-312(,%fp)	# restore
	or	%s30,0,%s51
# line 346
	ld	%s60,0(,%s60)	# *(colidx_y)
	or	%s31,0,%s54
	ldl.sx	%s7,0(,%s47)	# *(x_min)
	or	%s32,0,%s49
	ld	%s46,-320(,%fp)	# restore
	or	%s33,0,%s48
	ld	%s5,0(,%s50)	# *(nnzx)
	or	%s34,0,%s55
	st	%s34,-240(,%fp)	# spill
	ldl.sx	%s6,0(,%s46)	# *(x_max)
	or	%s34,0,%s58
	st	%s34,-248(,%fp)	# spill
	ld	%s46,-328(,%fp)	# restore
	or	%s34,0,%s63
	st	%s34,-256(,%fp)	# spill
	ld	%s4,0(,%s46)	# *(colidx_x)
	or	%s34,0,%s56
	st	%s34,-264(,%fp)	# spill
	ld	%s46,-336(,%fp)	# restore
	or	%s34,0,%s57
	st	%s34,-272(,%fp)	# spill
	ld	%s3,0(,%s46)	# *(bucket)
	or	%s0,0,%s61
	ld	%s46,-344(,%fp)	# restore
	or	%s34,0,%s61
	st	%s34,-280(,%fp)	# spill
	ld	%s2,0(,%s46)	# *(slice_idx_min)
	or	%s34,0,%s50
	st	%s34,-400(,%fp)	# spill
	ld	%s46,-352(,%fp)	# restore
	ld	%s1,0(,%s46)	# *(slice_idx_max)
	st	%s60,240(,%sp)
	ld	%s60,0(,%s25)	# *(mask)
	st	%s60,272(,%sp)
	st	%s26,248(,%sp)
	st	%s18,256(,%sp)
	st	%s62,264(,%sp)
	ld	%s62,-304(,%fp)	# restore
	st	%s62,280(,%sp)
	ld	%s62,-368(,%fp)	# restore
	st	%s62,288(,%sp)
	lea	%s12,bfs_kernel_spmspv_SELLCS_DFC_bitmap@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,bfs_kernel_spmspv_SELLCS_DFC_bitmap@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# bfs_kernel_spmspv_SELLCS_DFC_bitmap
	or	%s53,0,%s27
	or	%s59,0,%s28
	or	%s52,0,%s29
	or	%s51,0,%s30
	ld	%s61,-280(,%fp)	# restore
	or	%s54,0,%s31
	ld	%s50,-400(,%fp)	# restore
	or	%s49,0,%s32
	or	%s48,0,%s33
	ld	%s55,-240(,%fp)	# restore
	ld	%s58,-248(,%fp)	# restore
	ld	%s63,-256(,%fp)	# restore
	ld	%s56,-264(,%fp)	# restore
	ld	%s57,-272(,%fp)	# restore
	br.l	.L7.8
.L7.9:
# line 333
	st	%s22,0(,%s21)	# *(mode)
	ld	%s60,-288(,%fp)	# restore
	or	%s27,0,%s53
	ld	%s47,-296(,%fp)	# restore
	or	%s28,0,%s59
# line 334
	ld	%s1,0(,%s60)	# *(mask_x)
	or	%s29,0,%s52
	ld	%s2,0(,%s47)	# *(mask_y)
	or	%s30,0,%s51
	ld	%s6,0(,%s25)	# *(mask)
	or	%s31,0,%s54
	or	%s32,0,%s50
	or	%s33,0,%s49
	or	%s34,0,%s48
	st	%s34,-232(,%fp)	# spill
	or	%s34,0,%s55
	st	%s34,-240(,%fp)	# spill
	or	%s34,0,%s58
	st	%s34,-248(,%fp)	# spill
	or	%s34,0,%s63
	st	%s34,-256(,%fp)	# spill
	or	%s34,0,%s56
	st	%s34,-264(,%fp)	# spill
	or	%s34,0,%s57
	st	%s34,-272(,%fp)	# spill
	or	%s5,0,%s62
	or	%s4,0,%s18
	or	%s3,0,%s26
	or	%s0,0,%s61
	or	%s34,0,%s61
	st	%s34,-280(,%fp)	# spill
	ld	%s7,-304(,%fp)	# restore
	lea	%s12,bfs_kernel_SELLCS_DFC_bitmap@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,bfs_kernel_SELLCS_DFC_bitmap@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# bfs_kernel_SELLCS_DFC_bitmap
	or	%s53,0,%s27
	or	%s59,0,%s28
	or	%s52,0,%s29
	or	%s51,0,%s30
	ld	%s61,-280(,%fp)	# restore
	or	%s54,0,%s31
	or	%s50,0,%s32
	or	%s49,0,%s33
	ld	%s48,-232(,%fp)	# restore
	ld	%s55,-240(,%fp)	# restore
	ld	%s58,-248(,%fp)	# restore
	ld	%s63,-256(,%fp)	# restore
	ld	%s56,-264(,%fp)	# restore
	ld	%s57,-272(,%fp)	# restore
	br.l	.L7.8
.L_8.EoE:
	.set	.L.8.2auto_size,	0xfffffffffffffc30	# 976 Bytes
	.size	run_custom_bfs_test$3,	.-run_custom_bfs_test$3
# ============ End  run_custom_bfs_test$3 ============
# ============ Begin  run_custom_bfs_test$4 ============
	.balign 16
# line 461
	.type	run_custom_bfs_test$4,@function
run_custom_bfs_test$4:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	lea     %sp,-288(,%fp)
	brge.l.t	%sp,%sl,.L_9.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_9.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,40,%s2
	adds.l	%s61,32,%s2
	ld	%s62,0(,%s62)
	adds.l	%s60,24,%s2
	ld	%s61,0(,%s61)
	adds.l	%s59,16,%s2
	ld	%s60,0(,%s60)
	adds.l	%s2,8,%s2
	ld	%s59,0(,%s59)
	ld	%s2,0(,%s2)
	st	%s63,-8(,%fp)	# sellcs_matrix
	st	%s2,-40(,%fp)	# bfs_x
	st	%s59,-16(,%fp)	# mask_x
	st	%s60,-24(,%fp)	# bfs_y
	st	%s61,-32(,%fp)	# mask_y
	st	%s62,-48(,%fp)	# bit_flag
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 462
	adds.w.sx	%s62,%s62,(0)0
# line 461
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 462
	adds.w.sx	%s1,%s1,(0)0
	or	%s26,0,%s18
	adds.w.sx	%s32,%s18,%s1
	mins.w.sx	%s62,%s62,%s32
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L8.0
.L8.1:
# line 469
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L8.0:
	ld	%s31,-48(,%fp)	# bit_flag
	or	%s24,0,%s63
	ld	%s30,-32(,%fp)	# mask_y
# line 462
	adds.w.sx	%s25,%s18,(63)0
	ld	%s29,-24(,%fp)	# bfs_y
	or	%s18,0,%s0
	ld	%s28,-16(,%fp)	# mask_x
	ld	%s27,-40(,%fp)	# bfs_x
	ld	%s23,-8(,%fp)	# sellcs_matrix
.L8.2:
# line 467
	ldl.sx	%s63,24(,%s23)	# *(sellcs_matrix).nrows
	ldl.sx	%s62,0(,%s24)	# chunk_size
	ld	%s0,0(,%s27)	# *(bfs_x)
	adds.w.sx	%s61,%s63,%s62
	ld	%s1,0(,%s28)	# *(mask_x)
	adds.w.sx	%s61,%s61,(0)0
	ld	%s4,0(,%s29)	# *(bfs_y)
	divs.w.sx	%s62,%s61,%s62
	ld	%s5,0(,%s30)	# *(mask_y)
	ldl.sx	%s6,36(,%s23)	# *(sellcs_matrix).C
	ld1b.zx	%s7,0(,%s31)	# *(bit_flag)
	muls.w.sx	%s61,%s25,%s62
	muls.w.sx	%s2,%s26,%s62
	mins.w.sx	%s3,%s61,%s63
	lea	%s12,spmv_merge_res@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,spmv_merge_res@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# spmv_merge_res
# line 462
	adds.w.sx	%s25,%s25,(63)0
	ldl.sx	%s61,0(,%s24)	# chunk_size
	adds.w.sx	%s26,%s26,(63)0
	adds.w.sx	%s62,%s61,(0)0
	mins.w.sx	%s61,%s62,%s32
	adds.w.sx	%s62,%s61,(63)0

	brlt.w	%s26,%s62,.L8.2
	or	%s0,0,%s18
	br.l	.L8.1
.L_9.EoE:
	.set	.L.9.2auto_size,	0xfffffffffffffee0	# 288 Bytes
	.size	run_custom_bfs_test$4,	.-run_custom_bfs_test$4
# ============ End  run_custom_bfs_test$4 ============
# ============ Begin  run_custom_bfs_test$5 ============
	.balign 16
# line 473
	.type	run_custom_bfs_test$5,@function
run_custom_bfs_test$5:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	st	%s33,168(,%fp)
	lea     %sp,-368(,%fp)
	brge.l.t	%sp,%sl,.L_10.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_10.EoP:
# End of prologue codes
	lea	%s63,64
	adds.l	%s63,%s63,%s2
	ld	%s62,0(,%s2)
	adds.l	%s61,56,%s2
	ld	%s63,0(,%s63)
	adds.l	%s60,48,%s2
	ld	%s61,0(,%s61)
	adds.l	%s59,40,%s2
	ld	%s60,0(,%s60)
	adds.l	%s58,32,%s2
	ld	%s59,0(,%s59)
	adds.l	%s57,24,%s2
	ld	%s58,0(,%s58)
	adds.l	%s56,16,%s2
	ld	%s57,0(,%s57)
	adds.l	%s2,8,%s2
	ld	%s56,0(,%s56)
	ld	%s2,0(,%s2)
	st	%s62,-16(,%fp)	# task_sizes
	st	%s2,-24(,%fp)	# sellcs_matrix
	st	%s56,-32(,%fp)	# bfs_y
	st	%s57,-40(,%fp)	# mask_y
	st	%s58,-48(,%fp)	# thread_y_nnz
	st	%s59,-56(,%fp)	# bfs_x
	st	%s60,-72(,%fp)	# mask_x
	st	%s61,-64(,%fp)	# colidx_x
	st	%s63,-80(,%fp)	# bit_flag
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 475
	adds.w.sx	%s62,%s62,(0)0
# line 473
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 475
	adds.w.sx	%s1,%s1,(0)0
	or	%s34,0,%s18
	adds.w.sx	%s33,%s18,%s1
	mins.w.sx	%s62,%s62,%s33
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L9.0
.L9.1:
# line 484
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	ld	%s33,168(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L9.0:
	ld	%s62,-48(,%fp)	# thread_y_nnz
	or	%s61,0,%s18
# line 475
	muls.l	%s61,4,%s61
	ld	%s1,-16(,%fp)	# task_sizes
	or	%s32,0,%s63
	adds.l	%s28,%s62,%s61
	adds.l	%s24,%s1,%s61
	ld	%s31,-80(,%fp)	# bit_flag
	or	%s18,0,%s0
	ld	%s25,-64(,%fp)	# colidx_x
	ld	%s26,-72(,%fp)	# mask_x
	ld	%s27,-56(,%fp)	# bfs_x
	ld	%s29,-40(,%fp)	# mask_y
	ld	%s30,-32(,%fp)	# bfs_y
	ld	%s23,-24(,%fp)	# sellcs_matrix
.L9.2:
# line 481
	ldl.sx	%s63,24(,%s23)	# *(sellcs_matrix).nrows
	or	%s35,0,%s34
	st	%s35,-88(,%fp)	# spill
	ldl.sx	%s62,0(,%s24)	# *(task_sizes)
	ldl.sx	%s61,4(,%s24)	# *(task_sizes)
	sla.w.sx	%s2,%s62,8
	st	%s63,256(,%sp)
	ldl.sx	%s62,36(,%s23)	# *(sellcs_matrix).C
	sla.w.sx	%s61,%s61,8
	ld	%s7,0(,%s25)	# *(colidx_x)
	mins.w.sx	%s3,%s61,%s63
	ld	%s6,0(,%s26)	# *(mask_x)
	ld	%s5,0(,%s27)	# *(bfs_x)
	ldl.sx	%s4,0(,%s28)	# *(thread_y_nnz)
	ld	%s1,0(,%s29)	# *(mask_y)
	ld	%s0,0(,%s30)	# *(bfs_y)
	st	%s62,240(,%sp)
	ld1b.zx	%s63,0(,%s31)	# *(bit_flag)
	st	%s63,248(,%sp)
	lea	%s12,dense2sparse@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,dense2sparse@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# dense2sparse
# line 475
	adds.l	%s28,4,%s28
	adds.l	%s24,4,%s24
	ldl.sx	%s61,0(,%s32)	# chunk_size
	ld	%s34,-88(,%fp)	# restore
	adds.w.sx	%s62,%s61,(0)0
	mins.w.sx	%s61,%s62,%s33
	adds.w.sx	%s34,%s34,(63)0
	adds.w.sx	%s2,%s61,(63)0

	brlt.w	%s34,%s2,.L9.2
	or	%s0,0,%s18
	br.l	.L9.1
.L_10.EoE:
	.set	.L.10.2auto_size,	0xfffffffffffffe90	# 368 Bytes
	.size	run_custom_bfs_test$5,	.-run_custom_bfs_test$5
# ============ End  run_custom_bfs_test$5 ============
# ============ Begin  run_custom_bfs_test$6 ============
	.balign 16
# line 491
	.type	run_custom_bfs_test$6,@function
run_custom_bfs_test$6:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	st	%s33,168(,%fp)
	lea     %sp,-304(,%fp)
	brge.l.t	%sp,%sl,.L_11.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_11.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,56,%s2
	adds.l	%s61,48,%s2
	ld	%s62,0(,%s62)
	adds.l	%s60,40,%s2
	ld	%s61,0(,%s61)
	adds.l	%s59,32,%s2
	ld	%s60,0(,%s60)
	adds.l	%s58,24,%s2
	ld	%s59,0(,%s59)
	adds.l	%s57,16,%s2
	ld	%s58,0(,%s58)
	adds.l	%s2,8,%s2
	ld	%s57,0(,%s57)
	ld	%s2,0(,%s2)
	st	%s63,-8(,%fp)	# task_sizes
	st	%s2,-64(,%fp)	# bfs_y
	st	%s57,-16(,%fp)	# colidx_y
	st	%s58,-24(,%fp)	# thread_y_nnz
	st	%s59,-32(,%fp)	# bfs_x
	st	%s60,-40(,%fp)	# mask_x
	st	%s61,-48(,%fp)	# sellcs_matrix
	st	%s62,-56(,%fp)	# bit_flag
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 492
	adds.w.sx	%s62,%s62,(0)0
# line 491
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 492
	adds.w.sx	%s1,%s1,(0)0
	or	%s33,0,%s18
	adds.w.sx	%s32,%s18,%s1
	mins.w.sx	%s62,%s62,%s32
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L10.0
.L10.1:
# line 498
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	ld	%s33,168(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L10.0:
	ld	%s62,-24(,%fp)	# thread_y_nnz
	or	%s61,0,%s18
# line 492
	muls.l	%s61,4,%s61
	ld	%s60,-8(,%fp)	# task_sizes
	or	%s31,0,%s63
	adds.l	%s26,%s62,%s61
	adds.l	%s23,%s60,%s61
	ld	%s30,-56(,%fp)	# bit_flag
	or	%s18,0,%s0
	ld	%s29,-48(,%fp)	# sellcs_matrix
	ld	%s28,-40(,%fp)	# mask_x
	ld	%s27,-32(,%fp)	# bfs_x
	ld	%s25,-16(,%fp)	# colidx_y
	ld	%s24,-64(,%fp)	# bfs_y
.L10.2:
# line 495
	ldl.sx	%s63,0(,%s23)	# *(task_sizes)
	ld	%s62,0(,%s24)	# *(bfs_y)
	sla.w.sx	%s63,%s63,8
	ld	%s61,0(,%s25)	# *(colidx_y)
	muls.l	%s60,8,%s63
	ldl.sx	%s59,4(,%s26)	# *(thread_y_nnz)
	muls.l	%s63,4,%s63
	adds.l	%s0,%s62,%s60
	ldl.sx	%s62,0(,%s26)	# *(thread_y_nnz)
	adds.l	%s1,%s63,%s61
	ld	%s3,0(,%s27)	# *(bfs_x)
	subs.w.sx	%s2,%s59,%s62
	ld	%s4,0(,%s28)	# *(mask_x)
	ldl.sx	%s5,36(,%s29)	# *(sellcs_matrix).C
	ld1b.zx	%s6,0(,%s30)	# *(bit_flag)
	ldl.sx	%s7,24(,%s29)	# *(sellcs_matrix).nrows
	lea	%s12,sparse2dense@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,sparse2dense@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# sparse2dense
# line 492
	adds.l	%s26,4,%s26
	adds.l	%s23,4,%s23
	ldl.sx	%s63,0(,%s31)	# chunk_size
	adds.w.sx	%s33,%s33,(63)0
	adds.w.sx	%s59,%s63,(0)0
	mins.w.sx	%s63,%s59,%s32
	adds.w.sx	%s62,%s63,(63)0

	brlt.w	%s33,%s62,.L10.2
	or	%s0,0,%s18
	br.l	.L10.1
.L_11.EoE:
	.set	.L.11.2auto_size,	0xfffffffffffffed0	# 304 Bytes
	.size	run_custom_bfs_test$6,	.-run_custom_bfs_test$6
# ============ End  run_custom_bfs_test$6 ============
# ============ Begin  run_custom_bfs_test$7 ============
	.balign 16
# line 502
	.type	run_custom_bfs_test$7,@function
run_custom_bfs_test$7:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	st	%s30,144(,%fp)
	st	%s31,152(,%fp)
	st	%s32,160(,%fp)
	st	%s33,168(,%fp)
	lea     %sp,-304(,%fp)
	brge.l.t	%sp,%sl,.L_12.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_12.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,56,%s2
	adds.l	%s61,48,%s2
	ld	%s62,0(,%s62)
	adds.l	%s60,40,%s2
	ld	%s61,0(,%s61)
	adds.l	%s59,32,%s2
	ld	%s60,0(,%s60)
	adds.l	%s5,24,%s2
	ld	%s59,0(,%s59)
	adds.l	%s4,16,%s2
	ld	%s5,0(,%s5)
	adds.l	%s2,8,%s2
	ld	%s4,0(,%s4)
	ld	%s2,0(,%s2)
	st	%s63,-8(,%fp)	# task_sizes
	st	%s2,-64(,%fp)	# bfs_x
	st	%s4,-16(,%fp)	# colidx_x
	st	%s5,-24(,%fp)	# thread_y_nnz
	st	%s59,-32(,%fp)	# bfs_y
	st	%s60,-40(,%fp)	# colidx_y
	st	%s61,-48(,%fp)	# sellcs_matrix
	st	%s62,-56(,%fp)	# bit_flag
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s59,%s1,%s62
# line 503
	adds.w.sx	%s62,%s62,(0)0
# line 502
	adds.w.sx	%s2,%s59,(0)0
	divs.w.sx	%s1,%s2,%s1
	muls.w.sx	%s18,%s0,%s1
# line 503
	adds.w.sx	%s6,%s1,(0)0
	or	%s33,0,%s18
	adds.w.sx	%s32,%s18,%s6
	mins.w.sx	%s3,%s62,%s32
	adds.w.sx	%s3,%s3,(63)0

	brlt.w	%s18,%s3,.L11.0
.L11.1:
# line 508
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	ld	%s30,144(,%fp)
	ld	%s31,152(,%fp)
	ld	%s32,160(,%fp)
	ld	%s33,168(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L11.0:
	ld	%s62,-24(,%fp)	# thread_y_nnz
	or	%s61,0,%s18
# line 503
	muls.l	%s60,4,%s61
	ld	%s61,-8(,%fp)	# task_sizes
	or	%s31,0,%s63
	adds.l	%s26,%s62,%s60
	adds.l	%s23,%s61,%s60
	ld	%s30,-56(,%fp)	# bit_flag
	or	%s18,0,%s0
	ld	%s29,-48(,%fp)	# sellcs_matrix
	ld	%s25,-40(,%fp)	# colidx_y
	ld	%s24,-32(,%fp)	# bfs_y
	ld	%s28,-16(,%fp)	# colidx_x
	ld	%s27,-64(,%fp)	# bfs_x
.L11.2:
# line 506
	ldl.sx	%s63,0(,%s23)	# *(task_sizes)
	ld	%s62,0(,%s24)	# *(bfs_y)
	sla.w.sx	%s63,%s63,8
	ld	%s61,0(,%s25)	# *(colidx_y)
	muls.l	%s60,8,%s63
	ldl.sx	%s59,4(,%s26)	# *(thread_y_nnz)
	muls.l	%s63,4,%s63
	adds.l	%s4,%s62,%s60
	ldl.sx	%s2,0(,%s26)	# *(thread_y_nnz)
	adds.l	%s5,%s63,%s61
	ld	%s0,0(,%s27)	# *(bfs_x)
	subs.w.sx	%s3,%s59,%s2
	ld	%s1,0(,%s28)	# *(colidx_x)
	ldl.sx	%s6,36(,%s29)	# *(sellcs_matrix).C
	ld1b.zx	%s7,0(,%s30)	# *(bit_flag)
	lea	%s12,merge_res@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,merge_res@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# merge_res
# line 503
	adds.l	%s26,4,%s26
	adds.l	%s23,4,%s23
	ldl.sx	%s63,0(,%s31)	# chunk_size
	adds.w.sx	%s33,%s33,(63)0
	adds.w.sx	%s63,%s63,(0)0
	mins.w.sx	%s63,%s63,%s32
	adds.w.sx	%s63,%s63,(63)0

	brlt.w	%s33,%s63,.L11.2
	or	%s0,0,%s18
	br.l	.L11.1
.L_12.EoE:
	.set	.L.12.2auto_size,	0xfffffffffffffed0	# 304 Bytes
	.size	run_custom_bfs_test$7,	.-run_custom_bfs_test$7
# ============ End  run_custom_bfs_test$7 ============
# ============ Begin  run_custom_bfs_test$8 ============
	.balign 16
# line 730
	.type	run_custom_bfs_test$8,@function
run_custom_bfs_test$8:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s18,48(,%fp)
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	st	%s26,112(,%fp)
	st	%s27,120(,%fp)
	st	%s28,128(,%fp)
	st	%s29,136(,%fp)
	lea     %sp,-240(,%fp)
	brge.l.t	%sp,%sl,.L_13.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_13.EoP:
# End of prologue codes
	ld	%s63,0(,%s2)
	adds.l	%s62,16,%s2
	adds.l	%s2,8,%s2
	ld	%s62,0(,%s62)
	ld	%s2,0(,%s2)
	st	%s63,-16(,%fp)	# nnz_per_thread
	st	%s2,-24(,%fp)	# sellcs_matrix
	st	%s62,-32(,%fp)	# mask_y
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s62,0(,%s63)	# chunk_size
	adds.w.sx	%s61,%s1,%s62
# line 732
	adds.w.sx	%s62,%s62,(0)0
# line 730
	adds.w.sx	%s61,%s61,(0)0
	divs.w.sx	%s1,%s61,%s1
	muls.w.sx	%s18,%s0,%s1
# line 732
	adds.w.sx	%s1,%s1,(0)0
	or	%s26,0,%s18
	adds.w.sx	%s29,%s18,%s1
	mins.w.sx	%s62,%s62,%s29
	adds.w.sx	%s62,%s62,(63)0

	brlt.w	%s18,%s62,.L12.0
.L12.1:
# line 736
	lea	%s12,__vthr$_barrier_task@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,__vthr$_barrier_task@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# __vthr$_barrier_task
# Start of epilogue codes
	ld	%s18,48(,%fp)
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	ld	%s26,112(,%fp)
	ld	%s27,120(,%fp)
	ld	%s28,128(,%fp)
	ld	%s29,136(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L12.0:
	ld	%s27,-32(,%fp)	# mask_y
	or	%s28,0,%s63
	ld	%s25,-24(,%fp)	# sellcs_matrix
# line 732
	adds.w.sx	%s24,%s18,(63)0
	ld	%s23,-16(,%fp)	# nnz_per_thread
	or	%s18,0,%s0
.L12.2:
# line 735
	ldl.sx	%s63,0(,%s23)	# *(nnz_per_thread)
	ldl.sx	%s62,24(,%s25)	# *(sellcs_matrix).nrows
	muls.w.sx	%s61,%s24,%s63
	ld	%s0,0(,%s27)	# *(mask_y)
	muls.w.sx	%s1,%s26,%s63
	mins.w.sx	%s2,%s61,%s62
	ldl.sx	%s3,36(,%s25)	# *(sellcs_matrix).C
	lea	%s12,reset@CALL_LO
	and	%s12,%s12,(32)0
	lea.sl	%s12,reset@CALL_HI(,%s12)
	bsic	%lr,(,%s12)	# reset
# line 732
	adds.w.sx	%s24,%s24,(63)0
	ldl.sx	%s62,0(,%s28)	# chunk_size
	adds.w.sx	%s26,%s26,(63)0
	adds.w.sx	%s63,%s62,(0)0
	mins.w.sx	%s61,%s63,%s29
	adds.w.sx	%s1,%s61,(63)0

	brlt.w	%s26,%s1,.L12.2
	or	%s0,0,%s18
	br.l	.L12.1
.L_13.EoE:
	.set	.L.13.2auto_size,	0xffffffffffffff10	# 240 Bytes
	.size	run_custom_bfs_test$8,	.-run_custom_bfs_test$8
# ============ End  run_custom_bfs_test$8 ============
# ============ Begin  print_additional_custom_report ============
	.section .rodata
	.balign 16
	.type	.LP.__string.5,@object
.LP.__string.5:
	.byte	37
	.byte	115
	.byte	34
	.byte	82
	.byte	111
	.byte	119
	.byte	32
	.byte	111
	.byte	114
	.byte	100
	.byte	101
	.byte	114
	.byte	32
	.byte	115
	.byte	105
	.byte	103
	.byte	109
	.byte	97
	.byte	32
	.byte	119
	.byte	105
	.byte	110
	.byte	100
	.byte	111
	.byte	119
	.byte	34
	.byte	58
	.byte	32
	.byte	37
	.byte	108
	.byte	117
	.byte	44
	.byte	10
	.zero	1
	.balign 8
	.type	.LP.__string.6,@object
.LP.__string.6:
	.byte	37
	.byte	115
	.byte	34
	.byte	84
	.byte	97
	.byte	115
	.byte	107
	.byte	32
	.byte	83
	.byte	105
	.byte	122
	.byte	101
	.byte	34
	.byte	58
	.byte	32
	.byte	37
	.byte	108
	.byte	117
	.byte	10
	.zero	1
	.text
	.balign 16
# line 825
	.globl	print_additional_custom_report
	.type	print_additional_custom_report,@function
print_additional_custom_report:
	st	%fp,0x0(,%sp)
	st	%lr,0x8(,%sp)
	st	%got,0x18(,%sp)
	st	%plt,0x20(,%sp)
	or	%fp,0,%sp
	st	%s23,88(,%fp)
	st	%s24,96(,%fp)
	st	%s25,104(,%fp)
	lea     %sp,-208(,%fp)
	brge.l.t	%sp,%sl,.L_14.EoP
	ld	%s61,0x18(,%tp)
	or	%s62,0,%s0
	lea	%s63,0x13b
	shm.l	%s63,0x0(%s61)
	shm.l	%sl,0x8(%s61)
	shm.l	%sp,0x10(%s61)
	monc
	or	%s0,0,%s62
.L_14.EoP:
# End of prologue codes
# line 826
	lea	%s23,.LP.__string.5@LO
	and	%s23,%s23,(32)0
	lea.sl	%s23,.LP.__string.5@HI(,%s23)
	or	%s1,0,%s0
	st	%s23,176(,%sp)
	lea	%s24,sigma_window@LO
	and	%s24,%s24,(32)0
	lea.sl	%s24,sigma_window@HI(,%s24)
	or	%s25,0,%s0
	ldl.sx	%s2,0(,%s24)	# sigma_window
	lea	%s24,printf@LO
	and	%s24,%s24,(32)0
	lea.sl	%s24,printf@HI(,%s24)
	st	%s2,192(,%sp)
	st	%s0,184(,%sp)
	or	%s0,0,%s23
	or	%s12,0,%s24
	bsic	%lr,(,%s12)	# printf
# line 827
	lea	%s0,.LP.__string.6@LO
	and	%s0,%s0,(32)0
	lea.sl	%s0,.LP.__string.6@HI(,%s0)
	or	%s1,0,%s25
	st	%s0,176(,%sp)
	lea	%s63,chunk_size@LO
	and	%s63,%s63,(32)0
	lea.sl	%s63,chunk_size@HI(,%s63)
	ldl.sx	%s2,0(,%s63)	# chunk_size
	st	%s2,192(,%sp)
	st	%s25,184(,%sp)
	or	%s12,0,%s24
	bsic	%lr,(,%s12)	# printf
# line 828
# Start of epilogue codes
	ld	%s23,88(,%fp)
	ld	%s24,96(,%fp)
	ld	%s25,104(,%fp)
	or	%sp,0,%fp
	ld	%got,0x18(,%sp)
	ld	%plt,0x20(,%sp)
	ld	%lr,0x8(,%sp)
	ld	%fp,0x0(,%sp)
	b.l.t	(,%lr)
.L_14.EoE:
	.set	.L.14.2auto_size,	0xffffffffffffff30	# 208 Bytes
	.size	print_additional_custom_report,	.-print_additional_custom_report
# ============ End  print_additional_custom_report ============
